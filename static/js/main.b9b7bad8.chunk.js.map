{"version":3,"sources":["store/actions.ts","components/views/counter.tsx","sim/jobs/dnc/dancer.ts","sim/jobs/jobmods.ts","consts.ts","components/lib/makenavmenu.tsx","components/navmenu.tsx","components/views/mainlayout.tsx","components/views/welcome.tsx","sim/consts/levelmod.ts","sim/util/randomRange.ts","sim/util/damagecalc.ts","sim/jobs/sim.ts","sim/jobs/dnc/dancerstate.ts","sim/jobs/dnc/sim.ts","components/config.tsx","components/damageareachart.tsx","sim/util/movingaverage.ts","components/damagetable.tsx","components/logviewer.tsx","components/views/dncdemo.tsx","components/dynamicrouter.tsx","store/actions/journey.ts","store/reducers/counter.ts","store/reducers/journey.ts","store/routeReducer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Action","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","connect","state","counter","props","classes","Card","className","CardContent","Typography","color","gutterBottom","CardActions","Button","variant","onClick","dispatch","type","DECREMENT","Divider","orientation","INCREMENT","jobMods","hp","mp","str","vit","dex","int","mnd","mainStat","autoAttackStat","procs","flourishingCascade","name","duration","flourishingFountain","flourishingWindmill","flourishingShower","flourishingFanDance","buffs","autoAttack","potency","traitDamageMult","autoAttackDelay","cascade","baseCastTime","baseRecastTime","isGCD","comboInteraction","proc","procChance","animationLock","skills","reverseCascade","fountain","comboPotency","comboActions","fountainFall","risingWindmill","iconPath","bloodshower","saberDance","flourish","cooldown","standardStep","technicalStep","step","standardFinish","prePullStandard","technicalFinish","fanDance","fanDance3","devilment","dancer","dancerJobMods","JOURNEY","rootJourney","path","elementId","children","label","icon","dancerBIS","stats","weaponDamage","crit","det","dhit","spellSpeed","skillSpeed","tenacity","jobMod","NavigationItem","navigate","divider","ListItem","button","ListItemIcon","Icon","ListItemText","primary","journey","console","log","window","location","href","useNavigate","useState","navItems","setNavItems","useEffect","items","makeNavItems","basePath","level","length","views","reduce","acc","next","index","ret","push","key","uri","Path","join","concat","makeNavItemsFactory","makeItems","List","theme","createStyles","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","TAG","MainLayout","React","open","setOpen","handleDrawerClose","CssBaseline","ClickAwayListener","onClickAway","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","paper","Container","Welcome","component","size","levelMod80","main","sub","div","threat","randomRange","min","max","Math","random","potencyMult","ptc","attackPowerMult","attackPower","floor","detMult","levelMod","determination","tenacityMult","directHitChance","critChance","critDamageBonus","calcAutoAttackDamage","weaponDelay","traitMult","speed","range","speedMult","calcDamage","weaponDamageMult","Sim","player","maxTime","printLog","currentTime","damageDealt","gcdTimer","autoAttackTimer","comboTimer","comboAction","cooldowns","animLock","this","damage","jumpTimeBy","time","cooldownsJumpBy","buffsJumpBy","totalDamage","dps","totalActions","skill","timeToLog","getCurrentTime","includes","chit","baseDamage","critC","calcCritChanceFromBuffs","dhitC","calcDHitChanceFromBuffs","calcDamageMultFromBuffs","damageLog","directHit","timestamp","useSkill","comment","find","cooldownToRemove","filter","getCooldown","removeCooldown","sort","p1","p2","afterTime","map","buff","buffToRemove","getBuff","removeBuff","found","ability","tempArr","damagePoints","abilityDamage","forEach","val","Array","ceil","fill","critdhit","hits","logs","getLog","summary","totalTime","DancerState","esprit","feathers","maxEsprit","maxFeathers","stepsRemaining","inStandard","inTechnical","amount","espritToAdd","feathersToAdd","procToRemove","getProcByName","removeProc","number","setRemainingSteps","getInStandard","getInTechnical","DNCSim","opener","teamGCD","queuedSkill","registerProcs","registerCooldowns","getFeathers","getEsprit","getProcs","toFixed","getBuffs","onUse","getDancerComment","mult","dancerBuffs","logLine","padStart","toString","procsJumpBy","numToGen","i","generateEsprit","getInDance","getStepsRemaining","dancerSkills","flourishcd","getShortestGCDProcTimer","getGCDProcToUse","shouldUseSaberDance","toJump","jumpToNextEvent","shift","simulateTeamGCD","doAutoAttack","doNextGCD","doNextOGCD","nextOGCD","getNextOGCD","shouldUseDevilment","shouldUseFlourish","dancerProcs","shouldUseFanDance","dealDamage","jumpToNextGCD","getNextGCD","jumpToAutoAttack","useAutoAttack","dancerAutoAttack","doNextAction","addProc","addCooldown","removeFeather","featherProc","removeEsprit","addBuff","triggerGCD","setInStandard","setInTechnical","removeStep","chance","addFeather","isBursting","addEsprit","procArray","table","unselectable","userSelect","Config","forceUpdate","setValue","value","useForceUpdate","Grid","container","config","item","xs","sm","TextField","id","defaultValue","fullWidth","onChange","event","target","dragHandleSelector","lockAxis","onDrop","removedIndex","addedIndex","arrayMove","mutate","src","ListItemSecondaryAction","splice","Delete","Add","DamageAreaChart","data","series","dataToSeries","options","chart","show","offsetX","offsetY","tools","download","selection","zoom","zoomin","zoomout","pan","reset","autoSelected","height","stacked","dataLabels","enabled","stroke","curve","legend","horizontalAlign","xaxis","tooltip","inverseOrder","arr","smoothData","dataAvg","windowSize","getter","setter","get","result","leftOffeset","from","to","sum","j","movingAvg","valsmoothed","oldProps","setState","Component","DamageTable","setData","totalDPS","setTotalDPS","newData","inst","f","damagePercent","a","b","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","TableFooter","colSpan","LogViewer","handleChange","bind","renderRow","style","msToTime","dmgAmount","displayBox","dense","renderRowAll","s","pad","n","z","slice","ms","secs","mins","withStyles","overflow","maxHeight","TabPanel","other","role","hidden","aria-labelledby","DNCDemo","tabAnchor","tab","pass1","pass2","selectedLog","dataArea","Object","keys","recalc","componentDidMount","sim","toReturn","JSON","parse","stringify","configToPlayer","run","simData","createDataPointsAreaChart","prev","current","cur","elem","dmg","ButtonGroup","startIcon","Tabs","e","newValue","Tab","currentTarget","anchorEl","keepMounted","Boolean","onClose","MenuItem","makeElement","o","createElement","routes","setJourn","SET_JOURNEY","payload","routesConfig","setRouter","rc","makeRoutesConfig","undefined","element","useRoutes","counterReducer","action","INITIAL_STATE","journeyReducer","routeReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","process","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b9b7bad8.chunk.js","sourcesContent":["export enum Action{\r\n    //Counter\r\n    INCREMENT = 'increment',\r\n    DECREMENT = 'decrement',\r\n    // Journey\r\n    SET_JOURNEY = 'set_journey'\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Action } from '../../store/actions';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state: { counter: number }) => {\r\n    return {\r\n        counter: state.counter\r\n    }\r\n}\r\n\r\nlet Counter = (props: { counter?: number, dispatch: Function }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Count: {props.counter}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => { props.dispatch({ type: Action.DECREMENT }) }}>Decrement</Button>\r\n                <Divider orientation=\"vertical\" />\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => { props.dispatch({ type: Action.INCREMENT }) }}>Increment</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(Counter);\r\n","import AutoAttack from \"../autoattack\";\r\nimport Buff from \"../buff\";\r\nimport JobMods from \"../jobmods\";\r\nimport Proc from \"../proc\";\r\nimport Skill from \"../skill\";\r\n\r\nconst jobMods: JobMods = {\r\n    hp: 105,\r\n    mp: 79,\r\n    str: 90,\r\n    vit: 100,\r\n    dex: 115,\r\n    int: 85,\r\n    mnd: 80,\r\n    mainStat: () => {\r\n        return jobMods.dex\r\n    },\r\n    autoAttackStat: () => {\r\n        return jobMods.dex\r\n    }\r\n}\r\n\r\nconst globalTraitMult: number = 1.2\r\nconst globalAnimLock: number = 0.75\r\n\r\n//Not sure how to type this\r\nconst flourishingCascade: Proc = { name: \"Flourishing Cascade\", duration: 20 }\r\nconst flourishingFountain: Proc = { name: \"Flourishing Fountain\", duration: 20 }\r\nconst flourishingWindmill: Proc = { name: \"Flourishing Windmill\", duration: 20 }\r\nconst flourishingShower: Proc = { name: \"Flourishing Shower\", duration: 20 }\r\n\r\nconst flourishingFanDance: Proc = { name: \"Flourishing Fan Dance\", duration: 20 }\r\n\r\nconst procs = {\r\n    flourishingCascade,\r\n    flourishingFountain,\r\n    flourishingWindmill,\r\n    flourishingShower,\r\n\r\n    flourishingFanDance\r\n}\r\n\r\nconst standardFinishBuff: Buff = { name: \"Standard Finish\", duration: 60 }\r\nconst technicalFinishBuff: Buff = { name: \"Technical Finish\", duration: 20 }\r\nconst devilmentBuff: Buff = { name: \"Devilment\", duration: 20 }\r\n\r\nconst buffs = {\r\n    standardFinishBuff,\r\n    technicalFinishBuff,\r\n    devilmentBuff\r\n}\r\n\r\nconst autoAttack: AutoAttack = {\r\n    potency: 110,\r\n    traitDamageMult: 1.0,\r\n    autoAttackDelay: 3.12\r\n}\r\n\r\nconst cascade: Skill = {\r\n    name: \"Cascade\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 250,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    comboInteraction: true,\r\n    proc: procs.flourishingCascade,\r\n    procChance: 0.5,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst fountain: Skill = {\r\n    name: \"Fountain\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 100,\r\n    comboPotency: 300,\r\n    comboActions: [cascade],\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    comboInteraction: true,\r\n    proc: procs.flourishingFountain,\r\n    procChance: 0.5,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst reverseCascade: Skill = {\r\n    name: \"Reverse Cascade\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 300,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst fountainFall: Skill = {\r\n    name: \"Fountainfall\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 350,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst risingWindmill: Skill = {\r\n    name: \"Rising Windmill\",\r\n    iconPath: \"https://xivapi.com/i/003000/003463.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 300,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst bloodshower: Skill = {\r\n    name: \"Bloodshower\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 350,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst saberDance: Skill = {\r\n    name: \"Saber Dance\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 600,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst flourish: Skill = {\r\n    name: \"Flourish\",\r\n    iconPath: \"https://xivapi.com/i/003000/003475.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 60,\r\n    cooldown: 60,\r\n    traitDamageMult: 0,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst standardStep: Skill = {\r\n    name: \"Standard Step\",\r\n    iconPath: \"https://xivapi.com/i/003000/003454.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    cooldown: 30,\r\n    traitDamageMult: 0,\r\n    isGCD: true,\r\n    animationLock: 1.5\r\n}\r\n\r\nconst prePullStandard: Skill = {\r\n    name: \"Standard Finish\",\r\n    iconPath: \"https://xivapi.com/i/003000/003459.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    potency: 1000,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst technicalStep: Skill = {\r\n    name: \"Technical Step\",\r\n    iconPath: \"https://xivapi.com/i/003000/003473.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    cooldown: 120,\r\n    traitDamageMult: 0,\r\n    isGCD: true,\r\n    animationLock: 1.5\r\n}\r\n\r\nconst step: Skill = {\r\n    name: \"Step\",\r\n    iconPath: \"https://xivapi.com/i/003000/003455.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1,\r\n    traitDamageMult: 0,\r\n    isGCD: true,\r\n    animationLock: 1\r\n}\r\n\r\nconst standardFinish: Skill = {\r\n    name: \"Standard Finish\",\r\n    iconPath: \"https://xivapi.com/i/003000/003459.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    potency: 1000,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst technicalFinish: Skill = {\r\n    name: \"Technical Finish\",\r\n    iconPath: \"http://xivapi.com/i/003000/003474.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    potency: 1500,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst devilment: Skill = {\r\n    name: \"Devilment\",\r\n    iconPath: \"https://xivapi.com/i/003000/003471.png\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 120,\r\n    cooldown: 120,\r\n    traitDamageMult: 0,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst fanDance: Skill = {\r\n    name: \"Fan Dance\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 0.75,\r\n    potency: 150,\r\n    cooldown: 1.01,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock,\r\n    proc: procs.flourishingFanDance,\r\n    procChance: 0.5\r\n}\r\n\r\nconst fanDance3: Skill = {\r\n    name: \"Fan Dance III\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.00,\r\n    potency: 200,\r\n    cooldown: 1.00,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst skills = {\r\n    cascade,\r\n    reverseCascade,\r\n    fountain,\r\n    fountainFall,\r\n    risingWindmill,\r\n    bloodshower,\r\n    saberDance,\r\n    flourish,\r\n    standardStep,\r\n    technicalStep,\r\n    step,\r\n    standardFinish,\r\n    prePullStandard,\r\n    technicalFinish,\r\n    fanDance,\r\n    fanDance3,\r\n    devilment\r\n}\r\n\r\nexport { jobMods as dancerJobMods };\r\nexport { skills as dancerSkills };\r\nexport { autoAttack as dancerAutoAttack };\r\nexport { procs as dancerProcs };\r\nexport { buffs as dancerBuffs };\r\n\r\n","import { dancerJobMods } from './dnc/dancer'\r\n\r\nexport default interface JobMods {\r\n    hp: number,\r\n    mp: number,\r\n    str: number,\r\n    vit: number,\r\n    dex: number,\r\n    int: number,\r\n    mnd: number,\r\n    mainStat(): number,\r\n    autoAttackStat(): number\r\n\r\n}\r\n\r\nconst jobMods = {\r\n    dancer: dancerJobMods\r\n}\r\n\r\nexport { jobMods }\r\n","import { IJourney } from './interfaces/journeys';\r\nimport { jobMods } from './sim/jobs/jobmods';\r\nimport { Player } from './sim/player/player';\r\nexport const FORM_NAME = 'editQuestion';\r\nexport const FORM_NEW_QUIZ = 'newQuiz';\r\nexport const FORM_EDIT_CATEGORY = 'editCategory';\r\nexport const DRAWER_WIDTH = 240;\r\n\r\nexport interface ICategory {\r\n  _id: string\r\n  title: string\r\n  slug: string\r\n  description?: string\r\n}\r\n\r\nexport const JOURNEY: IJourney = {\r\n\r\n  rootJourney: [\r\n    {\r\n      path: '',\r\n      elementId: 'main',\r\n      children: [\r\n        { path: '/', elementId: 'welcome', label: 'Home', icon: 'home' },\r\n        'divider',\r\n        { path: '/DNCDemo', elementId: 'dncdemo', label: 'Dancer Demo' },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const dancerBIS: Player = {\r\n  stats: {\r\n    mainStat: 4871,\r\n    weaponDamage: 128,\r\n    crit: 3969,\r\n    det: 2067,\r\n    dhit: 2762,\r\n    spellSpeed: 380,\r\n    skillSpeed: 380,\r\n    tenacity: 380\r\n  },\r\n  jobMod: jobMods.dancer\r\n}","import { Divider, ListItemIcon } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Path from 'path-browserify';\r\nimport React from 'react';\r\nimport { NavigateFunction } from 'react-router';\r\nimport { IRouteParamOrDivider } from '../../interfaces/journeys';\r\nimport * as views from '../views/index';\r\n\r\ninterface INavigationItemProps {\r\n  icon?: string\r\n  path: string\r\n  label: string\r\n  divider: boolean\r\n  key: string\r\n  navigate: Function\r\n}\r\n\r\nconst NavigationItem = (props: INavigationItemProps) => {\r\n\r\n  const { icon, path, label, navigate, divider } = props;\r\n\r\n  return (\r\n    <ListItem button divider={divider} onClick={() => navigate(path)}>\r\n      {icon && <ListItemIcon><Icon fontSize=\"small\">{icon}</Icon></ListItemIcon>}\r\n      <ListItemText primary={label} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default function makeNavItemsFactory(navigate: NavigateFunction) {\r\n\r\n  return function makeNavItems(items: Array<IRouteParamOrDivider>, basePath: string = '', level = 1): React.FunctionComponent[] {\r\n\r\n    console.log('entered makeNavItems with count=', items.length);\r\n    console.log('views exports:', views);\r\n\r\n    return items.reduce((acc: Array<any>, next, index) => {\r\n      let ret = [...acc];\r\n\r\n      if (next === 'divider') {\r\n        ret.push(<Divider key={`${level}.${index}`} />);\r\n      } else {\r\n        const uri = Path.join(basePath, next.path);\r\n        if (next.label && next.elementId && views[next.elementId]) {\r\n          ret.push(<NavigationItem\r\n            icon={next.icon}\r\n            path={uri}\r\n            label={next.label}\r\n            navigate={navigate}\r\n            key={`${level}.${index}`}\r\n            divider={!!next.divider} />);\r\n        }\r\n\r\n        if (next.children) {\r\n          ret = ret.concat(makeNavItems(next.children, uri, level + 1));\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }, []);\r\n  };\r\n\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IJourney, IRouteParamOrDivider } from '../interfaces/journeys';\r\nimport makeNavItemsFactory from './lib/makenavmenu';\r\n\r\n\r\nconst mapStateToProps = (state: { journey: IJourney }) => {\r\n  return {\r\n    rootJourney: state.journey?.rootJourney || [],\r\n  };\r\n};\r\n\r\nconst NavMenu = (props: { rootJourney: Array<IRouteParamOrDivider> }) => {\r\n  console.log('entered NavMenu FC', window.location.href);\r\n  const { rootJourney } = props;\r\n\r\n  const navigate = useNavigate();\r\n  const [navItems, setNavItems] = useState([]);\r\n  useEffect(() => {\r\n    const makeItems = makeNavItemsFactory(navigate);\r\n    const items = makeItems(rootJourney);\r\n    setNavItems(items);\r\n  }, [rootJourney]);\r\n\r\n  return (\r\n    <List>\r\n      {navItems}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavMenu);\r\n","import { ClickAwayListener } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { DRAWER_WIDTH } from '../../consts';\r\nimport NavMenu from '../navmenu';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        display: 'flex',\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n        marginLeft: DRAWER_WIDTH,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      drawer: {\r\n        width: DRAWER_WIDTH,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: DRAWER_WIDTH,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -DRAWER_WIDTH,\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n      },\r\n    }),\r\n);\r\n\r\nconst TAG = 'MainLayout';\r\n\r\nexport default function MainLayout() {\r\n\r\n  console.log(TAG, 'Entered MainLayout');\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    console.log(TAG, 'entered handleDrawerOpen');\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    console.log(TAG, 'entered handleDrawerClosed');\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <CssBaseline/>\r\n        <ClickAwayListener onClickAway={\r\n          () => {\r\n            console.log(TAG, 'onClickAway event');\r\n            handleDrawerClose()\r\n          }\r\n        }>\r\n          <div>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                  [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                  <MenuIcon/>\r\n                </IconButton>\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  XIVSim\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n              <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  <ChevronLeftIcon/>\r\n                </IconButton>\r\n              </div>\r\n              <Divider/>\r\n              <NavMenu />\r\n            </Drawer>\r\n          </div>\r\n        </ClickAwayListener>\r\n        <main\r\n            className={clsx(classes.content, {\r\n              [classes.contentShift]: open,\r\n            })}\r\n        >\r\n          <div className={classes.drawerHeader}/>\r\n          <Container>\r\n            <Outlet/>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nlet Welcome = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            Welcome\r\n        </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Welcome to XIVSim\r\n        </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Welcome;","export interface LevelMod {\r\n    mp: number\r\n    main: number\r\n    sub: number\r\n    div: number\r\n    threat: number\r\n}\r\n\r\nconst levelMod80: LevelMod = {\r\n    mp: 10000,\r\n    main: 340,\r\n    sub: 380,\r\n    div: 3300,\r\n    threat: 569\r\n}\r\n\r\nexport default levelMod80","const randomRange = (min: number, max: number) => {\r\n    return Math.random() * (max - min) + min\r\n}\r\n\r\nexport default randomRange","import { LevelMod } from \"../consts/levelmod\";\r\nimport randomRange from \"./randomRange\";\r\n\r\n//All functions were made using information taken from http://allaganstudies.akhmorning.com/\r\nconst potencyMult = (ptc: number) => {\r\n    return ptc / 100;\r\n}\r\n\r\nconst weaponDamageMult = (levelMod: LevelMod, jobMod: number, weaponDamage: number) => {\r\n    return Math.floor((levelMod.main * jobMod / 1000) + weaponDamage);\r\n}\r\n\r\nconst attackPowerMult = (attackPower: number) => {\r\n    return (Math.floor((165 * (attackPower - 340) / 340) + 100) / 100)\r\n}\r\n\r\nconst detMult = (levelMod: LevelMod, determination: number) => {\r\n    return (Math.floor(130 * (determination - levelMod.main) / levelMod.div + 1000) / 1000)\r\n}\r\n\r\nconst tenacityMult = (levelMod: LevelMod, tenacity: number) => {\r\n    return (Math.floor(100 * (tenacity - levelMod.sub) / levelMod.div + 1000) / 1000)\r\n}\r\n\r\nconst speedMult = (levelMod: LevelMod, speed: number) => {\r\n    return (Math.floor(130 * (speed - levelMod.sub) / levelMod.div + 1000) / 1000)\r\n}\r\n\r\nconst directHitChance = (levelMod: LevelMod, dhit: number) => {\r\n    return (Math.floor(550 * (dhit - levelMod.sub) / levelMod.div) / 10)\r\n}\r\n\r\nconst critChance = (levelMod: LevelMod, crit: number) => {\r\n    return (Math.floor(200 * (crit - levelMod.sub) / levelMod.div + 50) / 10)\r\n}\r\n\r\nconst critDamageBonus = (levelMod: LevelMod, crit: number) => {\r\n    return (Math.floor(200 * (crit - levelMod.sub) / levelMod.div + 1400) / 1000)\r\n}\r\n\r\nconst autoAttack = (levelMod: LevelMod, jobMod: number, weaponDamage: number, weaponDelay: number) => {\r\n    return (Math.floor(Math.floor(levelMod.main * jobMod / 1000 + weaponDamage) * (weaponDelay / 3)))\r\n}\r\n\r\nconst adjustTimeToSpeed = (time: number, speed: number, levelMod: LevelMod) => {\r\n    return Math.floor(Math.floor(100 * 100 * (Math.floor(time * 1000 * (1000 - Math.floor(130 * speed - levelMod.sub / levelMod.div)) / 1000) / 1000)) / 100) / 100\r\n}\r\n\r\nconst calcAutoAttackDamage = (potency: number, levelMod: LevelMod, jobMod: number, weaponDamage: number, weaponDelay: number, attackPower: number, determination: number, tenacity: number, traitMult: number, speed: number, range?: number) => {\r\n    range = range ? range : randomRange(0.95, 1.05)\r\n    return Math.floor(Math.floor(Math.floor(potencyMult(potency) * autoAttack(levelMod, jobMod, weaponDamage, weaponDelay) * attackPowerMult(attackPower) * detMult(levelMod, determination) * tenacityMult(levelMod, tenacity) * traitMult) * speedMult(levelMod, speed)) * range)\r\n}\r\n\r\nconst calcDamage = (potency: number, levelMod: LevelMod, jobMod: number, weaponDamage: number, attackPower: number, determination: number, tenacity: number, traitMult: number, range?: number) => {\r\n    range = range ? range : randomRange(0.95, 1.05)\r\n    return (Math.floor(Math.floor(potencyMult(potency) * weaponDamageMult(levelMod, jobMod, weaponDamage) * attackPowerMult(attackPower) * detMult(levelMod, determination) * tenacityMult(levelMod, tenacity) * traitMult) * range))\r\n}\r\n\r\nconst calcDamageRange = (potency: number, levelMod: LevelMod, jobMod: number, weaponDamage: number, attackPower: number, determination: number, tenacity: number, traitMult: number) => {\r\n    return `${calcDamage(potency, levelMod, jobMod, weaponDamage, attackPower, determination, tenacity, traitMult, 0.95)} - ${calcDamage(potency, levelMod, jobMod, weaponDamage, attackPower, determination, tenacity, traitMult, 1.05)}`\r\n}\r\n\r\nexport { directHitChance, critChance, critDamageBonus, speedMult, adjustTimeToSpeed, calcAutoAttackDamage, calcDamage };\r\n\r\n","import { LevelMod } from \"../consts/levelmod\";\r\nimport { Player } from \"../player/player\";\r\nimport { calcAutoAttackDamage, calcDamage, critChance, critDamageBonus, directHitChance } from \"../util/damagecalc\";\r\nimport AutoAttack from \"./autoattack\";\r\nimport Buff from \"./buff\";\r\nimport CommentLog from \"./commentlog\";\r\nimport Cooldown from \"./cooldown\";\r\nimport DamageLog from \"./damagelog\";\r\nimport { AbilityDamage, DamagePoint, SimDataArea, Summary } from \"./simdata\";\r\nimport Skill from \"./skill\";\r\n\r\nexport default abstract class Sim {\r\n    player: Player;\r\n    levelMod: LevelMod;\r\n    printLog: boolean;\r\n    private currentTime: number;\r\n    maxTime: number;\r\n    damageDealt: number;\r\n    gcdTimer: number;\r\n    autoAttackTimer: number;\r\n    comboTimer: number;\r\n    comboAction: Skill;\r\n    log: Array<DamageLog>;\r\n    cooldowns: Array<Cooldown>;\r\n    animLock: number;\r\n    buffs: Array<Buff>\r\n\r\n    constructor(player: Player, levelMod: LevelMod, maxTime: number, printLog?: boolean) {\r\n        this.player = player\r\n        this.levelMod = levelMod\r\n        this.printLog = printLog\r\n        this.currentTime = 0\r\n        this.maxTime = maxTime * 100\r\n        this.damageDealt = 0\r\n        this.gcdTimer = 0\r\n        this.comboTimer = 0\r\n        this.autoAttackTimer = 0\r\n        this.log = []\r\n        this.cooldowns = []\r\n        this.animLock = 0\r\n        this.buffs = []\r\n    }\r\n\r\n    dealDamage(damage: number): void {\r\n        this.damageDealt += damage;\r\n    }\r\n\r\n    jumpToNextGCD(): void {\r\n        this.jumpTimeBy(this.gcdTimer);\r\n    }\r\n\r\n    jumpToAutoAttack(): void {\r\n        this.jumpTimeBy(this.autoAttackTimer);\r\n    }\r\n\r\n    //Ends the animation lock\r\n    jumpAnimationLock(): void {\r\n        this.jumpTimeBy(this.animLock)\r\n    }\r\n\r\n    //Jumps forward in time, updating the auto attack timer and gcd timer\r\n    jumpTimeBy(time: number): void {\r\n        this.currentTime += time\r\n        this.gcdTimer = Math.max(this.gcdTimer - time, 0)\r\n        this.autoAttackTimer = Math.max(this.autoAttackTimer - time, 0)\r\n        this.comboTimer = Math.max(this.comboTimer - time, 0)\r\n        this.animLock = Math.max(this.animLock - time, 0)\r\n        this.cooldownsJumpBy(time)\r\n        this.buffsJumpBy(time)\r\n    }\r\n\r\n    summary(): Summary {\r\n        return {\r\n            totalDamage: this.damageDealt,\r\n            dps: (this.damageDealt * 100 / this.currentTime),\r\n            duration: this.currentTime / 100,\r\n            totalActions: this.log.length\r\n        }\r\n    }\r\n\r\n    getCurrentTime(): number {\r\n        return this.currentTime\r\n    }\r\n\r\n    useSkill(skill: Skill): DamageLog {\r\n        const timeToLog = this.getCurrentTime();\r\n\r\n        let potency = skill.potency ? skill.potency : 0;\r\n        if (skill.comboPotency && this.comboTimer > 0 && skill.comboActions?.includes(this.comboAction)) {\r\n            potency = skill.comboPotency\r\n            this.comboTimer = 0\r\n        }\r\n\r\n        let chit = false\r\n        let dhit = false;\r\n        let damage: number = 0\r\n\r\n        if (potency > 0) {\r\n            const baseDamage: number = calcDamage(potency, this.levelMod, this.player.jobMod.mainStat(), this.player.stats.weaponDamage, this.player.stats.mainStat, this.player.stats.det, this.player.stats.tenacity, 1.2)\r\n            const critC: number = critChance(this.levelMod, this.player.stats.crit) / 100 + this.calcCritChanceFromBuffs();\r\n            const dhitC: number = directHitChance(this.levelMod, this.player.stats.dhit) / 100 + this.calcDHitChanceFromBuffs();\r\n\r\n            damage = Math.floor(baseDamage * this.calcDamageMultFromBuffs())\r\n\r\n            if (Math.random() <= critC) {\r\n                damage = Math.floor(damage * critDamageBonus(this.levelMod, this.player.stats.crit));\r\n                chit = true;\r\n            }\r\n\r\n            if (Math.random() <= dhitC) {\r\n                damage = Math.floor(damage * 1.25);\r\n                dhit = true;\r\n            }\r\n        } else {\r\n            damage = 0\r\n        }\r\n\r\n        const damageLog: DamageLog = {\r\n            name: skill.name,\r\n            damage: damage,\r\n            totalDamage: this.damageDealt,\r\n            potency: potency,\r\n            directHit: dhit,\r\n            crit: chit,\r\n            timestamp: timeToLog\r\n        }\r\n\r\n        if (skill.comboInteraction) {\r\n            this.comboAction = skill;\r\n            this.comboTimer = 10 * 100;\r\n        }\r\n\r\n        if (skill.animationLock) {\r\n            this.animLock = skill.animationLock * 100\r\n        }\r\n\r\n        return damageLog\r\n    }\r\n\r\n    useOGCD(skill: Skill): DamageLog | CommentLog {\r\n\r\n        if (skill.potency) {\r\n            return this.useSkill(skill)\r\n        }\r\n\r\n        if (skill.animationLock) {\r\n            this.animLock = skill.animationLock\r\n        }\r\n\r\n        return { timestamp: this.getCurrentTime(), comment: `Used ${skill.name}` }\r\n    }\r\n\r\n    useAutoAttack(autoAttack: AutoAttack): DamageLog {\r\n        const timeToLog = this.getCurrentTime();\r\n\r\n        const baseDamage: number = calcAutoAttackDamage(autoAttack.potency, this.levelMod, this.player.jobMod.autoAttackStat(), this.player.stats.weaponDamage, autoAttack.autoAttackDelay, this.player.stats.mainStat, this.player.stats.det, this.player.stats.tenacity, autoAttack.traitDamageMult, this.player.stats.skillSpeed)\r\n        const critC: number = critChance(this.levelMod, this.player.stats.crit) / 100 + this.calcCritChanceFromBuffs();\r\n        const dhitC: number = directHitChance(this.levelMod, this.player.stats.dhit) / 100 + this.calcDHitChanceFromBuffs();\r\n\r\n        let damage: number = Math.floor(baseDamage * this.calcDamageMultFromBuffs())\r\n\r\n        //console.log(\"Mult\", this.calcDamageMultFromBuffs())\r\n        let chit = false\r\n        let dhit = false;\r\n\r\n        if (Math.random() <= critC) {\r\n            damage = Math.floor(damage * critDamageBonus(this.levelMod, this.player.stats.crit));\r\n            chit = true;\r\n        }\r\n\r\n        if (Math.random() <= dhitC) {\r\n            damage = Math.floor(damage * 1.25);\r\n            dhit = true;\r\n        }\r\n\r\n        const damageLog: DamageLog = {\r\n            name: \"Auto Attack\",\r\n            damage: damage,\r\n            totalDamage: this.damageDealt,\r\n            potency: autoAttack.potency,\r\n            directHit: dhit,\r\n            crit: chit,\r\n            timestamp: timeToLog\r\n        }\r\n\r\n        return damageLog\r\n    }\r\n\r\n    getCooldown(name: string): Cooldown {\r\n        return this.cooldowns.find((cooldown: Cooldown) => {\r\n            if (cooldown.name === name) {\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    removeCooldown(cooldownToRemove: Cooldown): void {\r\n        this.cooldowns = this.cooldowns.filter((cooldown) => cooldown.name !== cooldownToRemove.name)\r\n    }\r\n\r\n    addCooldown(cooldown: Cooldown): void {\r\n        //If the cooldown already exists\r\n        if (this.getCooldown(cooldown.name)) {\r\n            this.removeCooldown(cooldown)\r\n        }\r\n\r\n        this.cooldowns.push({ name: cooldown.name, duration: cooldown.duration * 100 })\r\n\r\n        this.cooldowns.sort((p1, p2) => p1.duration - p2.duration)\r\n    }\r\n\r\n    //Simulates time for all cooldowns, removing any cooldowns that have run out\r\n    cooldownsJumpBy(time: number): void {\r\n\r\n        let afterTime = this.cooldowns.map((cooldown) => {\r\n            cooldown.duration = cooldown.duration - time\r\n            return cooldown\r\n        });\r\n        this.cooldowns = afterTime.filter((cooldown) => cooldown.duration > 0.001)\r\n    }\r\n\r\n    getBuff(name: string): Buff {\r\n        return this.buffs.find((buff: Buff) => {\r\n            if (buff.name === name) {\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    getBuffs(): Array<Buff> {\r\n        return this.buffs\r\n    }\r\n\r\n    removeBuff(buffToRemove: Buff): void {\r\n        this.buffs = this.buffs.filter((buff) => buff.name !== buffToRemove.name)\r\n    }\r\n\r\n    addBuff(buff: Buff): void {\r\n        //If the buff already exists\r\n        if (this.getBuff(buff.name)) {\r\n            this.removeBuff(buff)\r\n        }\r\n\r\n        this.buffs.push({ name: buff.name, duration: buff.duration * 100 })\r\n\r\n        this.buffs.sort((p1, p2) => p1.duration - p2.duration)\r\n    }\r\n\r\n    //Simulates time for all buffs, removing any buffs that have run out\r\n    buffsJumpBy(time: number): void {\r\n\r\n        let afterTime = this.buffs.map((buff) => {\r\n            buff.duration = buff.duration - time\r\n            return buff\r\n        });\r\n        this.buffs = afterTime.filter((buff) => buff.duration > 0.001)\r\n    }\r\n\r\n    triggerGCD(time: number): void {\r\n        this.gcdTimer = time\r\n    }\r\n\r\n    calcDamageMultFromBuffs(): number {\r\n        return 1\r\n    }\r\n\r\n    calcCritChanceFromBuffs(): number {\r\n        return 0\r\n    }\r\n\r\n    calcDHitChanceFromBuffs(): number {\r\n        return 0\r\n    }\r\n\r\n    createDataPointsAreaChart(): SimDataArea {\r\n        let damagePoints: DamagePoint[] = []\r\n        let found: DamagePoint\r\n\r\n\r\n        let abilityDamage: Array<AbilityDamage> = []\r\n        let ability: AbilityDamage\r\n\r\n        let tempArr: number[][]\r\n\r\n        this.log.forEach((damageLog) => {\r\n            if (damageLog.damage > 0) {\r\n                found = damagePoints.find((val) => val.name === damageLog.name)\r\n                if (!found) {\r\n                    tempArr = new Array<number[]>(Math.ceil(this.log[this.log.length - 1].timestamp / 100) + 1).fill([0, 0]).map((val, index) => [index, 0])\r\n                    damagePoints.push({ name: damageLog.name, totalDamage: 0, crit: 0, dhit: 0, critdhit: 0, hits: 0, damage: tempArr })\r\n                    found = damagePoints.find((val) => val.name === damageLog.name)\r\n                    found.damage.forEach((val, index) => {\r\n                        found.damage[index][0] = index\r\n                    })\r\n\r\n                }\r\n                if (damageLog.crit) {\r\n                    found.crit++\r\n                }\r\n                if (damageLog.directHit) {\r\n                    found.dhit++\r\n                }\r\n                if (damageLog.crit && damageLog.directHit) {\r\n                    found.critdhit++\r\n                }\r\n\r\n                found.hits++\r\n\r\n                found.damage.find((val) => Math.ceil(damageLog.timestamp / 100) === val[0])[1] += damageLog.damage\r\n                found.totalDamage += damageLog.damage\r\n            }\r\n\r\n\r\n            if (damageLog.damage > 0) {\r\n                ability = abilityDamage.find((val) => val.name === damageLog.name)\r\n                if (ability) {\r\n                    ability.damage += damageLog.damage\r\n                } else {\r\n                    abilityDamage.push({ name: damageLog.name, damage: damageLog.damage })\r\n                }\r\n            }\r\n        })\r\n        return { damagePoints: damagePoints, abilityDamage: abilityDamage, log: { logs: this.getLog(), summary: this.summary() }, totalTime: this.currentTime / 100 }\r\n    }\r\n\r\n    getLog(): DamageLog[] {\r\n        return this.log\r\n    }\r\n\r\n    abstract printDamageLogLine(damageLog: DamageLog): void;\r\n\r\n    abstract getNextGCD(): Skill;\r\n\r\n    abstract doNextAction(): DamageLog;\r\n\r\n    abstract run(): void;\r\n}","import Proc from \"../proc\"\r\n\r\nexport default class DancerState {\r\n    private esprit: number\r\n    private feathers: number\r\n\r\n    private maxEsprit: number\r\n    private maxFeathers: number\r\n\r\n    private procs: Array<Proc>\r\n\r\n    private stepsRemaining: number\r\n    private inStandard: boolean\r\n    private inTechnical: boolean\r\n\r\n    constructor() {\r\n        this.esprit = 0\r\n        this.feathers = 0\r\n\r\n        this.maxEsprit = 100\r\n        this.maxFeathers = 4\r\n\r\n        this.procs = []\r\n\r\n        this.stepsRemaining = 0\r\n        this.inStandard = false\r\n        this.inTechnical = false\r\n    }\r\n\r\n    getEsprit(): number {\r\n        return this.esprit\r\n    }\r\n\r\n    getFeathers(): number {\r\n        return this.feathers\r\n    }\r\n\r\n    //Adds give amount of esprit and returns the number of esprit added (amount - returned value = overcap)\r\n    addEsprit(amount: number): number {\r\n        let espritToAdd: number = Math.min(this.maxEsprit - this.esprit, amount)\r\n        this.esprit = this.esprit + espritToAdd\r\n\r\n        return espritToAdd\r\n    }\r\n\r\n    //Adds 1 feather (or given amount) and returns the number of feathers added (amount - returned value = overcap)\r\n    addFeather(amount: number = 1): number {\r\n        let feathersToAdd: number = Math.min(this.maxFeathers - this.feathers, amount)\r\n        this.feathers = this.feathers + feathersToAdd\r\n\r\n        return feathersToAdd\r\n    }\r\n\r\n    removeEsprit(amount: number): boolean {\r\n        if (this.esprit < amount) {\r\n            return false\r\n        }\r\n        this.esprit = (this.esprit - amount)\r\n        return true\r\n    }\r\n\r\n    removeFeather(): boolean {\r\n        if (this.feathers < 1) {\r\n            return false\r\n        }\r\n        this.feathers = this.feathers - 1\r\n        return true\r\n    }\r\n\r\n    getProcs(): Array<Proc> {\r\n        return this.procs\r\n    }\r\n\r\n    getProcByName(name: string): Proc {\r\n        return this.procs.find((proc: Proc) => {\r\n            if (proc.name === name) {\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    removeProc(procToRemove: Proc): void {\r\n        this.procs = this.procs.filter((proc) => proc.name !== procToRemove.name)\r\n    }\r\n\r\n    addProc(proc: Proc): void {\r\n        //If the proc already exists\r\n        if (this.getProcByName(proc.name)) {\r\n            this.removeProc(proc)\r\n        }\r\n\r\n        this.procs.push({ name: proc.name, duration: proc.duration * 100 })\r\n\r\n        this.procs.sort((p1, p2) => p1.duration - p2.duration)\r\n    }\r\n\r\n    //Simulates time for all procs, removing any procs that have run out\r\n    procsJumpBy(time: number): void {\r\n\r\n        let afterTime = this.procs.map((proc) => {\r\n            proc.duration = proc.duration - time\r\n            return proc\r\n        });\r\n        this.procs = afterTime.filter((proc) => proc.duration > 0)\r\n    }\r\n\r\n    getStepsRemaining(): number {\r\n        return this.stepsRemaining;\r\n    }\r\n\r\n    removeStep(number: number = 1): void {\r\n        this.stepsRemaining = Math.max(this.stepsRemaining - number, 0);\r\n    }\r\n\r\n    setRemainingSteps(number: number): void {\r\n        this.stepsRemaining = number;\r\n    }\r\n\r\n    setInStandard(inStandard: boolean): void {\r\n        if (inStandard) {\r\n            this.inStandard = true\r\n            this.setRemainingSteps(2)\r\n        } else {\r\n            this.inStandard = false\r\n        }\r\n    }\r\n\r\n    setInTechnical(inTechnical: boolean): void {\r\n        if (inTechnical) {\r\n            this.inTechnical = true\r\n            this.setRemainingSteps(4)\r\n        } else {\r\n            this.inTechnical = false\r\n        }\r\n    }\r\n\r\n    getInStandard(): boolean {\r\n        return this.inStandard\r\n    }\r\n\r\n    getInTechnical(): boolean {\r\n        return this.inTechnical\r\n    }\r\n\r\n    getInDance(): boolean {\r\n        return (this.getInStandard() || this.getInTechnical())\r\n    }\r\n}\r\n","import { LevelMod } from \"../../consts/levelmod\";\r\nimport { Player } from \"../../player/player\";\r\nimport AutoAttack from \"../autoattack\";\r\nimport DamageLog from \"../damagelog\";\r\nimport Sim from \"../sim\";\r\nimport Skill from \"../skill\";\r\nimport { dancerAutoAttack, dancerBuffs, dancerProcs, dancerSkills } from \"./dancer\";\r\nimport DancerState from \"./dancerstate\";\r\n\r\nexport default class DNCSim extends Sim {\r\n\r\n    opener: Array<Skill>\r\n    state: DancerState\r\n    teamGCD: number\r\n    queuedSkill: Skill\r\n\r\n    constructor(player: Player, levelMod: LevelMod, maxTime: number, opener?: Array<Skill>, printLog?: boolean) {\r\n        super(player, levelMod, maxTime, printLog);\r\n        this.opener = opener\r\n        this.state = new DancerState()\r\n        this.teamGCD = 0\r\n        this.registerProcs()\r\n        this.registerCooldowns()\r\n    }\r\n\r\n    getDancerComment(): { feathers: number, esprit: number, procs: string, buffs: string, cooldowns: string, gcdTimer: number } {\r\n        return {\r\n            feathers: this.state.getFeathers(),\r\n            esprit: this.state.getEsprit(),\r\n            procs: this.state.getProcs().reduce((acc: string, proc) => {\r\n                return acc + `${proc.name}(${(proc.duration / 100).toFixed(2)}) `\r\n            }, \"\"),\r\n            buffs: this.getBuffs().reduce((acc: string, buff) => {\r\n                return acc + `${buff.name}(${(buff.duration / 100).toFixed(2)}) `\r\n            }, \"\"),\r\n            cooldowns: this.cooldowns.reduce((acc: string, cooldown) => {\r\n                return acc + `${cooldown.name}(${(cooldown.duration / 100).toFixed(2)}) `\r\n            }, \"\"),\r\n            gcdTimer: this.gcdTimer\r\n        }\r\n    }\r\n\r\n    useSkill(skill: Skill): DamageLog {\r\n        let log: DamageLog = super.useSkill(skill)\r\n        if (skill.onUse) {\r\n            skill.onUse(this.state);\r\n        }\r\n        log.comment = this.getDancerComment();\r\n        return log\r\n    }\r\n\r\n    useOGCD(skill: Skill): DamageLog {\r\n        let log: any = super.useOGCD(skill)\r\n        if (skill.onUse) {\r\n            skill.onUse(this.state);\r\n        }\r\n        log.comment = this.getDancerComment();\r\n        if (!log.name) {\r\n            return {\r\n                name: skill.name,\r\n                damage: 0,\r\n                totalDamage: this.damageDealt,\r\n                potency: 0,\r\n                directHit: false,\r\n                crit: false,\r\n                timestamp: log.timestamp,\r\n                comment: log.comment\r\n            }\r\n        }\r\n        return log\r\n    }\r\n\r\n    useAutoAttack(autoAttack: AutoAttack): DamageLog {\r\n        let log: DamageLog = super.useAutoAttack(autoAttack)\r\n        log.comment = this.getDancerComment();\r\n        return log\r\n    }\r\n\r\n    calcDamageMultFromBuffs(): number {\r\n        let mult: number = 1\r\n        this.getBuffs().forEach((buff) => {\r\n            switch (buff.name) {\r\n                case dancerBuffs.standardFinishBuff.name:\r\n                    mult = mult * 1.05\r\n                    break\r\n                case dancerBuffs.technicalFinishBuff.name:\r\n                    mult = mult * 1.05\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n        return mult\r\n    }\r\n\r\n    calcCritChanceFromBuffs(): number {\r\n        let mult: number = 0\r\n        this.getBuffs().forEach((buff) => {\r\n            switch (buff.name) {\r\n                case dancerBuffs.devilmentBuff.name:\r\n                    mult = mult + 0.2\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n        return mult\r\n    }\r\n\r\n    calcDHitChanceFromBuffs(): number {\r\n        let mult: number = 0\r\n        this.getBuffs().forEach((buff) => {\r\n            switch (buff.name) {\r\n                case dancerBuffs.devilmentBuff.name:\r\n                    mult = mult + 0.2\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n        return mult\r\n    }\r\n\r\n    printDamageLogLine(damageLog: DamageLog): void {\r\n        let logLine: string = `${(damageLog.timestamp / 100).toFixed(2).padStart(6, ' ')}| ${damageLog.potency.toString().padStart(4, ' ')}p | Feathers: ${damageLog.comment?.feathers} Esprit: ${damageLog.comment?.esprit.toString().padStart(3, ' ')} | ${damageLog.damage.toString().padStart(6, ' ')} | ${damageLog.name} `;\r\n\r\n        if (damageLog.crit) {\r\n            logLine += \"C\"\r\n        }\r\n        if (damageLog.directHit) {\r\n            logLine += \"D\"\r\n        }\r\n\r\n        logLine = logLine + ` | Procs: ${damageLog.comment?.procs}`\r\n\r\n        //logLine = logLine + ` | GCD Timer: ${damageLog.comment?.gcdTimer}`\r\n\r\n        //logLine = logLine + ` | Buffs: ${damageLog.comment?.buffs}`\r\n\r\n        //logLine = logLine + ` | Cooldowns: ${damageLog.comment?.cooldowns}`\r\n        console.log(logLine);\r\n    }\r\n\r\n    jumpTimeBy(time: number): void {\r\n        this.state.procsJumpBy(time);\r\n        this.teamGCD = Math.max(this.teamGCD - time, 0)\r\n        super.jumpTimeBy(time)\r\n    }\r\n\r\n    simulateTeamGCD(): void {\r\n        let numToGen = 0\r\n\r\n        if (this.getBuff(dancerBuffs.technicalFinishBuff.name)) {\r\n            numToGen = 7\r\n        } else if (this.getBuff(dancerBuffs.standardFinishBuff.name)) {\r\n            numToGen = 2\r\n        }\r\n\r\n        for (let i = 0; i < numToGen; i++) {\r\n            //console.log(\"Team esprit\")\r\n            this.generateEsprit(0.2)\r\n        }\r\n    }\r\n\r\n    getNextGCD(): Skill {\r\n        if (this.state.getInDance()) {\r\n            if (this.state.getStepsRemaining() > 0) {\r\n                return dancerSkills.step\r\n            }\r\n            if (this.state.getStepsRemaining() === 0) {\r\n                if (this.state.getInStandard()) {\r\n                    return dancerSkills.standardFinish\r\n                }\r\n                if (this.state.getInTechnical()) {\r\n                    return dancerSkills.technicalFinish\r\n                }\r\n            }\r\n        }\r\n        if (!this.getCooldown(dancerSkills.standardStep.name)) {\r\n            return dancerSkills.standardStep\r\n        }\r\n        if (!this.getCooldown(dancerSkills.technicalStep.name)) {\r\n            return dancerSkills.technicalStep\r\n        }\r\n        //Ensure we dont let flourish drift\r\n        let flourishcd = this.getCooldown(dancerSkills.flourish.name) ? this.getCooldown(dancerSkills.flourish.name).duration : 0\r\n        if (this.state.getEsprit() >= 50 && this.getShortestGCDProcTimer().procs === 0 && flourishcd <= 250) {\r\n            return dancerSkills.saberDance\r\n        }\r\n        if (this.getShortestGCDProcTimer().procs > 0 && flourishcd <= 250) {\r\n            return this.getGCDProcToUse()\r\n        }\r\n\r\n        if (this.getShortestGCDProcTimer().procs * 250 > this.getShortestGCDProcTimer().duration) {\r\n            return this.getGCDProcToUse()\r\n        }\r\n        if (this.state.getEsprit() >= 50 && this.shouldUseSaberDance()) {\r\n            return dancerSkills.saberDance\r\n        }\r\n        if (this.getGCDProcToUse()) {\r\n            return this.getGCDProcToUse()\r\n        }\r\n        if (this.comboAction === dancerSkills.cascade) {\r\n            return dancerSkills.fountain\r\n        }\r\n        return dancerSkills.cascade\r\n    }\r\n\r\n    jumpToNextEvent(filter: boolean = false): void {\r\n        let toJump: Array<number> = [this.autoAttackTimer, this.gcdTimer, this.teamGCD, this.cooldowns[0]?.duration]\r\n        if (!filter)\r\n            toJump.push(this.animLock)\r\n\r\n        toJump = toJump.sort((p1, p2) => p1 - p2)\r\n\r\n        if (toJump[0]) {\r\n            this.jumpTimeBy(toJump[0])\r\n        }\r\n    }\r\n\r\n    //Figure out if we should do a gcd, ogcd, auto attack, wait etc\r\n    doNextAction(filter: boolean = false): DamageLog {\r\n        this.jumpToNextEvent(filter)\r\n\r\n        if (!this.queuedSkill && this.opener.length > 0) {\r\n            this.queuedSkill = this.opener.shift()\r\n        }\r\n\r\n        if (this.teamGCD === 0) {\r\n            this.simulateTeamGCD()\r\n            //console.log(\"thing\", this.getCurrentTime())\r\n            this.teamGCD = 250\r\n        }\r\n        if (this.autoAttackTimer === 0) {\r\n            return this.doAutoAttack()\r\n        }\r\n        if (this.queuedSkill) {\r\n            if (this.gcdTimer === 0) {\r\n                if (this.queuedSkill.isGCD) {\r\n                    const queuedSkill = this.queuedSkill\r\n                    this.queuedSkill = null\r\n                    return this.doNextGCD(queuedSkill)\r\n                }\r\n            }\r\n            if (this.animLock === 0) {\r\n                if (!this.queuedSkill.isGCD) {\r\n                    const queuedSkill = this.queuedSkill\r\n                    this.queuedSkill = null\r\n                    return this.doNextOGCD(queuedSkill)\r\n                }\r\n                this.jumpToNextEvent(true)\r\n            }\r\n        } else {\r\n            if (this.gcdTimer === 0) {\r\n                return this.doNextGCD()\r\n            }\r\n            if (this.animLock === 0) {\r\n                let nextOGCD: Skill = this.getNextOGCD()\r\n                if (nextOGCD) {\r\n                    return this.doNextOGCD()\r\n                } else {\r\n                    this.jumpToNextEvent(true)\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    getNextOGCD(): Skill {\r\n        if (this.animLock > 0) {\r\n            return null\r\n        }\r\n        if (!this.getCooldown(dancerSkills.devilment.name) && dancerSkills.devilment.animationLock * 100 <= this.gcdTimer && this.shouldUseDevilment()) {\r\n            return dancerSkills.devilment\r\n        }\r\n        if (!this.getCooldown(dancerSkills.flourish.name) && dancerSkills.flourish.animationLock * 100 <= this.gcdTimer && this.shouldUseFlourish()) {\r\n            return dancerSkills.flourish\r\n        }\r\n        if (!this.getCooldown(dancerSkills.fanDance3.name) && dancerSkills.fanDance3.animationLock * 100 <= this.gcdTimer && this.state.getProcByName(dancerProcs.flourishingFanDance.name)) {\r\n            return dancerSkills.fanDance3\r\n        }\r\n        if (!(this.getCooldown(dancerSkills.fanDance.name)) && dancerSkills.fanDance.animationLock * 100 <= this.gcdTimer && this.shouldUseFanDance()) {\r\n            return dancerSkills.fanDance\r\n        }\r\n        return null\r\n    }\r\n\r\n    doNextOGCD(skill?: Skill): DamageLog {\r\n        if (!skill) {\r\n            skill = this.getNextOGCD()\r\n        }\r\n\r\n        let damageLog: DamageLog;\r\n\r\n        damageLog = this.useSkill(skill)\r\n        if (damageLog.damage > 0) {\r\n            this.dealDamage(damageLog.damage)\r\n        }\r\n\r\n        return damageLog;\r\n    }\r\n\r\n    //Perform the next gcd\r\n    doNextGCD(skill?: Skill): DamageLog {\r\n        this.jumpToNextGCD();\r\n\r\n        if (!skill) {\r\n            skill = this.getNextGCD()\r\n        }\r\n\r\n        const damageLog: DamageLog = this.useSkill(skill)\r\n\r\n        this.dealDamage(damageLog.damage);\r\n\r\n        this.gcdTimer = skill.baseRecastTime * 100;\r\n\r\n        return damageLog;\r\n    }\r\n\r\n    //Perform an auto attack\r\n    doAutoAttack(): DamageLog {\r\n        this.jumpToAutoAttack();\r\n\r\n        const damageLog: DamageLog = this.useAutoAttack(dancerAutoAttack)\r\n\r\n        this.dealDamage(damageLog.damage)\r\n\r\n        this.autoAttackTimer = dancerAutoAttack.autoAttackDelay * 100;\r\n\r\n        return damageLog;\r\n    }\r\n\r\n    run(): void {\r\n        let damageLog: DamageLog;\r\n        while (this.getCurrentTime() < this.maxTime) {\r\n            damageLog = this.doNextAction();\r\n            if (damageLog) {\r\n                this.log.push(damageLog)\r\n                //this.printDamageLogLine(damageLog)\r\n            } else if (false) {\r\n                this.log.push({\r\n                    name: \"Verbose\",\r\n                    damage: 0,\r\n                    totalDamage: this.damageDealt,\r\n                    potency: 0,\r\n                    directHit: false,\r\n                    crit: false,\r\n                    timestamp: this.getCurrentTime(),\r\n                    comment: this.getDancerComment()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    registerProcs(): void {\r\n        dancerSkills.cascade.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            if (Math.random() < dancerSkills.cascade.procChance) {\r\n                this.state.addProc(dancerSkills.cascade.proc)\r\n            }\r\n        }\r\n\r\n        dancerSkills.fountain.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            if (Math.random() < dancerSkills.fountain.procChance) {\r\n                this.state.addProc(dancerSkills.fountain.proc)\r\n            }\r\n        }\r\n\r\n        dancerSkills.fanDance.onUse = (damageLog: DamageLog) => {\r\n            if (Math.random() < dancerSkills.fanDance.procChance) {\r\n                this.state.addProc(dancerSkills.fanDance.proc)\r\n            }\r\n            this.addCooldown({ name: dancerSkills.fanDance.name, duration: dancerSkills.fanDance.cooldown })\r\n            this.state.removeFeather()\r\n        }\r\n\r\n        dancerSkills.fanDance3.onUse = (damageLog: DamageLog) => {\r\n            this.state.removeProc(dancerProcs.flourishingFanDance)\r\n            this.addCooldown({ name: dancerSkills.fanDance3.name, duration: dancerSkills.fanDance3.cooldown })\r\n        }\r\n\r\n        dancerSkills.reverseCascade.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingCascade)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.fountainFall.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingFountain)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.risingWindmill.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingWindmill)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.bloodshower.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingShower)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.saberDance.onUse = (damageLog: DamageLog) => {\r\n            this.state.removeEsprit(50)\r\n        }\r\n    }\r\n\r\n    registerCooldowns(): void {\r\n        dancerSkills.flourish.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.flourish.name, duration: dancerSkills.flourish.cooldown })\r\n            this.state.addProc(dancerProcs.flourishingCascade)\r\n            this.state.addProc(dancerProcs.flourishingFountain)\r\n            this.state.addProc(dancerProcs.flourishingWindmill)\r\n            this.state.addProc(dancerProcs.flourishingShower)\r\n            this.state.addProc(dancerProcs.flourishingFanDance)\r\n        }\r\n\r\n        dancerSkills.devilment.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.devilment.name, duration: dancerSkills.devilment.cooldown })\r\n            this.addBuff({ name: dancerBuffs.devilmentBuff.name, duration: dancerBuffs.devilmentBuff.duration })\r\n        }\r\n\r\n        dancerSkills.standardStep.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.standardStep.name, duration: dancerSkills.standardStep.cooldown })\r\n            this.triggerGCD(1.5)\r\n            this.state.setRemainingSteps(2)\r\n            this.state.setInStandard(true)\r\n        }\r\n\r\n        dancerSkills.technicalStep.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.technicalStep.name, duration: dancerSkills.technicalStep.cooldown })\r\n            this.triggerGCD(1.5)\r\n            this.state.setRemainingSteps(4)\r\n            this.state.setInTechnical(true)\r\n        }\r\n\r\n        dancerSkills.step.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.0)\r\n            this.state.removeStep()\r\n        }\r\n\r\n        dancerSkills.standardFinish.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.5)\r\n            this.state.setInStandard(false)\r\n            this.addBuff({ name: dancerBuffs.standardFinishBuff.name, duration: dancerBuffs.standardFinishBuff.duration })\r\n        }\r\n\r\n        dancerSkills.prePullStandard.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.5)\r\n            this.state.setInStandard(false)\r\n            this.addBuff({ name: dancerBuffs.standardFinishBuff.name, duration: dancerBuffs.standardFinishBuff.duration })\r\n            this.addCooldown({ name: dancerSkills.standardStep.name, duration: dancerSkills.standardStep.cooldown - 15 })\r\n        }\r\n\r\n        dancerSkills.technicalFinish.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.5)\r\n            this.state.setInTechnical(false)\r\n            this.addBuff({ name: dancerBuffs.technicalFinishBuff.name, duration: dancerBuffs.technicalFinishBuff.duration })\r\n        }\r\n    }\r\n\r\n    featherProc(chance: number): boolean {\r\n        if (Math.random() < chance) {\r\n            this.state.addFeather()\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    shouldUseFlourish(): boolean {\r\n        if (/*this.state.getProcByName(dancerProcs.flourishingCascade.name) || this.state.getProcByName(dancerProcs.flourishingFountain.name) ||*/ this.state.getProcByName(dancerProcs.flourishingFanDance.name)) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    shouldUseFanDance(): boolean {\r\n        if (!this.isBursting() && (this.state.getProcByName(dancerProcs.flourishingFanDance.name) || (this.state.getFeathers() < 4))) {\r\n            return false\r\n        } else if (this.state.getFeathers() > 0) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    generateEsprit(chance: number = 0.3): void {\r\n        if (Math.random() < chance) {\r\n            this.state.addEsprit(10)\r\n        }\r\n    }\r\n\r\n    shouldUseDevilment(): boolean {\r\n        if (this.getBuff(dancerBuffs.technicalFinishBuff.name)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    shouldUseSaberDance(): boolean {\r\n        if (this.state.getEsprit() > 80 || this.isBursting()) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    isBursting(): boolean {\r\n        if (this.getBuff(dancerBuffs.technicalFinishBuff.name)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    getGCDProcToUse(): Skill {\r\n        if (this.state.getProcByName(dancerProcs.flourishingFountain.name)) {\r\n            return dancerSkills.fountainFall\r\n        }\r\n        if (this.state.getProcByName(dancerProcs.flourishingShower.name)) {\r\n            return dancerSkills.bloodshower\r\n        }\r\n        if (this.state.getProcByName(dancerProcs.flourishingCascade.name)) {\r\n            return dancerSkills.reverseCascade\r\n        }\r\n        if (this.state.getProcByName(dancerProcs.flourishingWindmill.name)) {\r\n            return dancerSkills.risingWindmill\r\n        }\r\n        return null\r\n    }\r\n\r\n    getShortestGCDProcTimer(): { duration: number, procs: number } {\r\n\r\n        let procArray: Array<number> = [\r\n            this.state.getProcByName(dancerProcs.flourishingFountain.name)?.duration,\r\n            this.state.getProcByName(dancerProcs.flourishingShower.name)?.duration,\r\n            this.state.getProcByName(dancerProcs.flourishingCascade.name)?.duration,\r\n            this.state.getProcByName(dancerProcs.flourishingWindmill.name)?.duration\r\n        ].filter((val) => val > 0)\r\n\r\n        const toReturn = {\r\n            duration: Math.min(...procArray),\r\n            procs: procArray.length\r\n        }\r\n        return toReturn\r\n    }\r\n}","import { Button, Divider, Grid, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Add, Delete } from '@material-ui/icons';\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport arrayMove from \"array-move\";\r\nimport React, { useState } from 'react';\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { ConfigOption } from '../interfaces/configoption';\r\nimport Skill from '../sim/jobs/skill';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 480,\r\n  },\r\n  unselectable: {\r\n    userSelect: 'none',\r\n  },\r\n});\r\n\r\nfunction useForceUpdate() {\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => ++value); // update the state to force render\r\n}\r\n\r\nexport default function Config(props: { config: ConfigOption[], opener: Skill[] }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const forceUpdate = useForceUpdate()\r\n\r\n  const onDrop = ({ removedIndex, addedIndex }) => {\r\n    arrayMove.mutate(props.opener, removedIndex, addedIndex)\r\n    forceUpdate()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        {props.config.map((item, index) => (\r\n          <Grid item xs={12} sm={6} key={index}>\r\n            <TextField\r\n              id={item.name}\r\n              label={item.name}\r\n              variant=\"outlined\"\r\n              defaultValue={item.value}\r\n              type={item.type}\r\n              fullWidth\r\n              onChange={(event) => item.value = event.target.value}\r\n            />\r\n          </Grid>\r\n        ))}\r\n\r\n        <Grid item xs={12} sm={12}>\r\n          <List>\r\n            <Divider />\r\n            <Container dragHandleSelector=\".drag-handle\" lockAxis=\"y\" onDrop={onDrop}>\r\n              {props.opener.map((item, index) => (\r\n                <Draggable key={index}>\r\n                  <ListItem className={classes.unselectable} >\r\n                    {item.iconPath && (<ListItemIcon><img src={item.iconPath}></img></ListItemIcon>)}\r\n                    <ListItemText primary={item.name} />\r\n                    <ListItemSecondaryAction>\r\n                      <ListItemIcon className=\"drag-handle\">\r\n                        <DragHandleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemIcon>\r\n                        <IconButton onClick={() => {\r\n                          props.opener.splice(index, 1)\r\n                          forceUpdate()\r\n                        }}>\r\n                          <Delete color=\"secondary\" />\r\n                        </IconButton>\r\n                      </ListItemIcon>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                </Draggable>\r\n              ))}\r\n            </Container>\r\n            <ListItem>\r\n              <Button fullWidth color=\"primary\" variant=\"outlined\">\r\n                <Add />\r\n              </Button>\r\n            </ListItem>\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import ReactApexChart from \"react-apexcharts\";\r\nimport { Component } from \"react\";\r\nimport React from \"react\";\r\nimport movingAvg from \"../sim/util/movingaverage\";\r\n\r\nclass DamageAreaChart extends Component<any, { series: any[], options: {} }> {\r\n    constructor(props: { data: Array<{ name: string, damage: Array<number[]> }> }) {\r\n        super(props);\r\n\r\n        const { data } = props\r\n\r\n        this.state = {\r\n            series: this.dataToSeries(data),\r\n            options: {\r\n                chart: {\r\n                    id: 'dncDemoArea',\r\n                    toolbar: {\r\n                        show: true,\r\n                        offsetX: 0,\r\n                        offsetY: 0,\r\n                        tools: {\r\n                            download: false,\r\n                            selection: true,\r\n                            zoom: true,\r\n                            zoomin: false,\r\n                            zoomout: false,\r\n                            pan: false,\r\n                            reset: true\r\n                        },\r\n                        autoSelected: 'zoom'\r\n                    },\r\n                    type: 'area',\r\n                    height: 350,\r\n                    stacked: true\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    width: '2'\r\n                },\r\n                legend: {\r\n                    position: 'bottom',\r\n                    horizontalAlign: 'left'\r\n                },\r\n                xaxis: {\r\n                    type: 'numeric'\r\n                },\r\n                tooltip: {\r\n                    inverseOrder: true,\r\n                }\r\n            },\r\n        };\r\n    }\r\n\r\n    dataToSeries(data: Array<{ name: string, damage: Array<number[]> }>): { name: string, data: number[][] }[] {\r\n        let series: { name: string, data: number[][] }[] = []\r\n\r\n        data.forEach((val) => {\r\n            series.push({ name: val.name, data: val.damage })\r\n        })\r\n\r\n        series.forEach((val) => {\r\n            let arr = this.smoothData(val.data, 10)\r\n            val.data = arr\r\n        })\r\n\r\n        return series\r\n    }\r\n\r\n    smoothData(dataAvg, amount) {\r\n        return movingAvg(dataAvg, amount, (val) => val[1], (val, valsmoothed) => [val[0], Math.floor(valsmoothed)])\r\n    }\r\n\r\n    componentDidUpdate(oldProps) {\r\n        \r\n        if (oldProps.data !== this.props.data)\r\n            this.setState({ series: this.dataToSeries(this.props.data) })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={310} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DamageAreaChart","export default function movingAvg(arr, windowSize, getter = (value) => value, setter?) {\r\n    const get = getter\r\n    const result = []\r\n\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n        const leftOffeset = i - windowSize\r\n        const from = leftOffeset >= 0 ? leftOffeset : 0\r\n        const to = i + windowSize + 1\r\n\r\n        let count = 0\r\n        let sum = 0\r\n        for (let j = from; j < to && j < arr.length; j += 1) {\r\n            sum += get(arr[j])\r\n            count += 1\r\n        }\r\n\r\n        result[i] = setter ? setter(arr[i], sum / (windowSize * 2 + 1)) : sum / (windowSize * 2 + 1)\r\n    }\r\n\r\n    return result\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport { DamagePoint } from '../sim/jobs/simdata';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 480,\r\n  },\r\n});\r\n\r\ninterface Row {\r\n  name: string\r\n  damage: number\r\n  crit: number\r\n  dhit: number\r\n  critdhit: number\r\n  amount: number\r\n  damagePercent: number\r\n  dps: number\r\n}\r\n\r\nexport default function DamageTable(props: { data: DamagePoint[][], totalTime: number }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState<Row[]>([])\r\n  const [totalDPS, setTotalDPS] = useState<number>(0)\r\n\r\n  useEffect(() => {\r\n    let newData: Row[] = []\r\n    let found: Row\r\n    let totalDamage: number = 0\r\n    let totalDPS: number = 0\r\n\r\n    props.data.forEach((val) => {\r\n      val.forEach((inst) => {\r\n        totalDamage += inst.totalDamage\r\n        found = newData.find((f) => f.name === inst.name)\r\n\r\n        if (found) {\r\n          found.damage = found.damage + inst.totalDamage\r\n\r\n          found.crit = found.crit + inst.crit\r\n          found.dhit = found.dhit + inst.dhit\r\n          found.critdhit = found.crit + inst.critdhit\r\n          found.amount = found.amount + inst.hits\r\n        } else {\r\n          newData.push({ name: inst.name, damage: inst.totalDamage, crit: inst.crit, dhit: inst.dhit, critdhit: inst.critdhit, amount: inst.hits, damagePercent: 0, dps: 0 })\r\n          found = newData.find((f) => f.name === inst.name)\r\n        }\r\n      })\r\n    })\r\n\r\n    newData.forEach((val) => {\r\n      val.damagePercent = val.damage / totalDamage\r\n      val.dps = val.damage / props.totalTime\r\n      totalDPS = totalDPS + val.dps\r\n      val.damage = val.damage / props.data.length\r\n      val.crit = val.crit / props.data.length\r\n      val.dhit = val.dhit / props.data.length\r\n      val.critdhit = val.critdhit / props.data.length\r\n      val.amount = val.amount / props.data.length\r\n    })\r\n\r\n    setData(newData.sort((a, b) => b.damage - a.damage))\r\n    setTotalDPS(totalDPS)\r\n  }, [props.data])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Name</TableCell>\r\n            <TableCell align=\"right\">Damage %</TableCell>\r\n            <TableCell align=\"right\">Damage</TableCell>\r\n            <TableCell align=\"right\">Hits</TableCell>\r\n            <TableCell align=\"right\">Crit %</TableCell>\r\n            <TableCell align=\"right\">DHit %</TableCell>\r\n            <TableCell align=\"right\">CDH %</TableCell>\r\n            <TableCell align=\"right\">DPS</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell align=\"right\">{(row.damagePercent * 100).toFixed(2)}%</TableCell>\r\n              <TableCell align=\"right\">{row.damage.toFixed(0)}</TableCell>\r\n              <TableCell align=\"right\">{row.amount.toFixed(1)}</TableCell>\r\n              <TableCell align=\"right\">{(row.crit * 100 / row.amount).toFixed(1)}%</TableCell>\r\n              <TableCell align=\"right\">{(row.dhit * 100 / row.amount).toFixed(1)}%</TableCell>\r\n              <TableCell align=\"right\">{(row.critdhit * 100 / row.amount).toFixed(1)}%</TableCell>\r\n              <TableCell align=\"right\">{(row.dps).toFixed(1)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TableCell size='medium' align=\"left\">Total</TableCell>\r\n            <TableCell variant='body' size='medium' colSpan={7} align=\"right\">{totalDPS.toFixed(1)}</TableCell>\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { List, ListItem, ListItemText, Paper, withStyles } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { ListChildComponentProps } from \"react-window\";\r\nimport DamageLog from \"../sim/jobs/damagelog\";\r\nimport { Summary } from \"../sim/jobs/simdata\";\r\n\r\nconst useStyles = () => ({\r\n    displayBox: {\r\n        overflow: 'auto',\r\n        maxHeight: 400,\r\n\r\n    },\r\n});\r\n\r\nclass LogViewer extends Component<any, { selection: number, logs: { logs: DamageLog[], summary: Summary }[] }> {\r\n    constructor(props: { selection: number, logs: { logs: DamageLog[], summary: Summary }[] }) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selection: props.selection,\r\n            logs: props.logs\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.renderRow = this.renderRow.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(oldProps) {\r\n        if (oldProps.logs !== this.props.logs) {\r\n            this.setState({ logs: this.props.logs })\r\n        }\r\n\r\n        if (oldProps.selection !== this.props.selection) {\r\n            this.setState({ selection: this.props.selection })\r\n        }\r\n    }\r\n\r\n    handleChange(event: React.ChangeEvent<{ value: number }>) {\r\n        console.log(event)\r\n        this.setState({ selection: event.target.value });\r\n    }\r\n\r\n    renderRow(props: ListChildComponentProps) {\r\n        const { index, style } = props;\r\n\r\n        const item = this.state.logs[this.state.selection].logs[index]\r\n\r\n        const timestamp = msToTime(item.timestamp)\r\n\r\n        let name = item.name\r\n\r\n        if (item.damage > 0) {\r\n            let dmgAmount: string = item.damage.toString()\r\n            if (item.crit) {\r\n                dmgAmount = `*${dmgAmount}*`\r\n            }\r\n            if (item.directHit) {\r\n                dmgAmount = `${dmgAmount} (Direct Hit)`\r\n            }\r\n            name += ' ' + dmgAmount\r\n        }\r\n\r\n\r\n        return (\r\n            <ListItem style={style} key={index}>\r\n                <ListItemText>[{timestamp}] {name}</ListItemText>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    renderRowAll(item: DamageLog, index: number) {\r\n\r\n        const timestamp = msToTime(item.timestamp)\r\n\r\n        let name = item.name\r\n\r\n        if (item.damage > 0) {\r\n            let dmgAmount: string = item.damage.toString()\r\n            if (item.crit) {\r\n                dmgAmount = `*${dmgAmount}*`\r\n            }\r\n            if (item.directHit) {\r\n                dmgAmount = `${dmgAmount} (Direct Hit)`\r\n            }\r\n            name += ' ' + dmgAmount\r\n        }\r\n\r\n\r\n        return (\r\n            <ListItem key={index}>\r\n                <ListItemText>[{timestamp}] {name}</ListItemText>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <>\r\n                <Paper className={classes.displayBox}>\r\n                    {/*<FixedSizeList height={400} width='auto' itemSize={30} itemCount={this.state.logs[this.state.selection].logs.length}>\r\n                        {this.renderRow}\r\n        </FixedSizeList>*/}\r\n                    <List dense>\r\n                        {this.state.logs[this.state.selection].logs.map((item, index) => (this.renderRowAll(item, index))\r\n                        )}\r\n                    </List>\r\n                </Paper>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction msToTime(s): string {\r\n\r\n    // Pad to 2 or 3 digits, default is 2\r\n    function pad(n, z = 2) {\r\n        return ('00' + n).slice(-z);\r\n    }\r\n\r\n    var ms = s % 100;\r\n    s = (s - ms) / 100;\r\n    var secs = s % 60;\r\n    s = (s - secs) / 60;\r\n    var mins = s % 60;\r\n    var hrs = (s - mins) / 60;\r\n\r\n    return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + pad(ms);\r\n}\r\n\r\nexport default withStyles(useStyles)(LogViewer)","import { Button, ButtonGroup, Card, CardActions, CardContent, Grid, Menu, MenuItem, Tab, Tabs } from '@material-ui/core';\r\nimport { Add, Delete } from '@material-ui/icons';\r\nimport React, { Component } from 'react';\r\nimport { dancerBIS } from '../../consts';\r\nimport { ConfigOption } from '../../interfaces/configoption';\r\nimport levelMod80 from '../../sim/consts/levelmod';\r\nimport DamageLog from '../../sim/jobs/damagelog';\r\nimport { dancerSkills } from '../../sim/jobs/dnc/dancer';\r\nimport DNCSim from '../../sim/jobs/dnc/sim';\r\nimport { jobMods } from '../../sim/jobs/jobmods';\r\nimport { DamagePoint, SimDataArea, Summary } from '../../sim/jobs/simdata';\r\nimport Skill from '../../sim/jobs/skill';\r\nimport { Player } from '../../sim/player/player';\r\nimport Config from '../config';\r\nimport DamageAreaChart from '../damageareachart';\r\nimport DamageTable from '../damagetable';\r\nimport LogViewer from '../logviewer';\r\n\r\nclass DNCDemo extends Component<{}, { tabAnchor: null | HTMLElement, tab: number, pass1: number | string | Array<number | string>, pass2: number | string | Array<number | string>, totalTime: number, selectedLog: number, logs: Array<{ logs: DamageLog[], summary: Summary }>, data: DamagePoint[][], dataArea: { name: string, damage: Array<number[]> }[], config: ConfigOption[], opener: Skill[] }>  {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabAnchor: null,\r\n      tab: 0,\r\n      pass1: 5,\r\n      pass2: 15,\r\n      totalTime: 0,\r\n      selectedLog: 0,\r\n      logs: [],\r\n      data: [],\r\n      dataArea: [],\r\n      config: Object.keys(dancerBIS.stats).map((key, index) => { return { name: key, type: \"number\", value: dancerBIS.stats[key] } }),\r\n      opener: [dancerSkills.prePullStandard, dancerSkills.technicalStep, dancerSkills.step, dancerSkills.step, dancerSkills.step, dancerSkills.step, dancerSkills.technicalFinish, dancerSkills.flourish, dancerSkills.risingWindmill, dancerSkills.devilment]\r\n    }\r\n\r\n    this.recalc = this.recalc.bind(this)\r\n    this.reset = this.reset.bind(this)\r\n    this.componentDidMount = this.componentDidMount.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.recalc()\r\n  }\r\n\r\n  recalc() {\r\n    console.log(\"state\", this.state)\r\n    let data: DamagePoint[][] = [...this.state.data]\r\n    let logs: { logs: DamageLog[], summary: Summary }[] = [...this.state.logs]\r\n    let totalTime: number = this.state.totalTime\r\n\r\n    const configToPlayer = (): Player => {\r\n      let toReturn: Player = JSON.parse(JSON.stringify(dancerBIS))\r\n\r\n      console.log(\"OUT\", toReturn)\r\n\r\n      toReturn.jobMod = jobMods.dancer\r\n\r\n      this.state.config.forEach((value) => {\r\n        toReturn.stats[value.name] = value.value\r\n      })\r\n\r\n      return toReturn\r\n    }\r\n\r\n    console.log(this.state.opener)\r\n\r\n    let sim: DNCSim = new DNCSim(configToPlayer(), levelMod80, 400, [...this.state.opener])\r\n\r\n    sim.run()\r\n\r\n    let simData: SimDataArea = sim.createDataPointsAreaChart()\r\n\r\n    logs.push(simData.log)\r\n\r\n    data.push(simData.damagePoints)\r\n\r\n    //console.log(logs)\r\n\r\n    totalTime = totalTime + simData.totalTime\r\n\r\n    let dataArea = data.reduce((prev: { name: string, damage: number[][] }[], current: { name: string, damage: number[][] }[]) => {\r\n\r\n      current.forEach((cur) => {\r\n        let found = prev.find((val) => val.name === cur.name)\r\n\r\n        if (found) {\r\n          found.damage.forEach((elem, index) => { elem[1] = elem[1] + cur.damage[index][1] })\r\n        } else {\r\n          prev.push(cur)\r\n        }\r\n\r\n      })\r\n      return prev\r\n    }, [])\r\n\r\n    dataArea.forEach((val) => {\r\n      val.damage.forEach((dmg) => {\r\n        dmg[1] = dmg[1] / data.length\r\n      })\r\n    })\r\n\r\n    this.setState({ tab: 0, data: data, totalTime: totalTime, logs: logs.sort((a, b) => a.summary.dps - b.summary.dps), dataArea: dataArea })\r\n  }\r\n\r\n  async reset() {\r\n    let dataArea = [...this.state.dataArea]\r\n    dataArea.forEach((val) => {\r\n      val.damage.forEach((dmg) => {\r\n        dmg[1] = 0\r\n      })\r\n    })\r\n\r\n    this.setState({\r\n      tab: 0,\r\n      totalTime: 0,\r\n      selectedLog: 0,\r\n      logs: [],\r\n      data: [],\r\n      dataArea: dataArea\r\n    }, this.recalc)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <CardActions>\r\n              <ButtonGroup>\r\n                <Button variant=\"outlined\" onClick={this.recalc} startIcon={<Add />}>Add</Button>\r\n                <Button variant=\"outlined\" onClick={this.reset} startIcon={<Delete />}>Reset</Button>\r\n              </ButtonGroup>\r\n            </CardActions>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item sm xs={12}><DamageAreaChart data={this.state.dataArea} /></Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Tabs value={this.state.tab} onChange={(e, newValue) => { if (newValue !== 1) this.setState({ tab: newValue }) }} aria-label=\"simple tabs example\">\r\n                <Tab label=\"Average Damage\" id='tab-1' />\r\n                <Tab onClick={(event: React.MouseEvent<HTMLButtonElement>) => { this.setState({ tabAnchor: event.currentTarget }) }} label=\"View Log\" id='tab-2' />\r\n                <Tab label=\"Configuration\" id='tab-3' />\r\n              </Tabs>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={this.state.tabAnchor}\r\n                keepMounted\r\n                open={Boolean(this.state.tabAnchor)}\r\n                onClose={() => this.setState({ tabAnchor: null })}\r\n              >\r\n                {this.state.logs.map((val, index) =>\r\n                  <MenuItem key={index} value={index} onClick={() => {\r\n                    this.setState({ selectedLog: index, tab: 1, tabAnchor: null })\r\n                  }}>{val.summary.dps.toFixed(1)}</MenuItem>\r\n                )}\r\n              </Menu>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TabPanel value={this.state.tab} index={0}><DamageTable data={this.state.data} totalTime={this.state.totalTime} /></TabPanel>\r\n              <TabPanel value={this.state.tab} index={1}><LogViewer selection={this.state.selectedLog} logs={this.state.logs} /></TabPanel>\r\n              <TabPanel value={this.state.tab} index={2}><Config config={this.state.config} opener={this.state.opener} /></TabPanel>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n      </Card >\r\n    )\r\n  }\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Grid xs item>\r\n          {children}\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DNCDemo","import { createElement, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PartialRouteObject } from 'react-router';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { IJourney, IRouteParam, IRouteParamOrDivider } from '../interfaces/journeys';\r\nimport * as views from './views/index';\r\nimport { setJourney } from '../store/actions/journey';\r\nimport { JOURNEY } from '../consts';\r\n\r\nconst makeElement = (o: IRouteParam) => {\r\n    return createElement(views[o.elementId]);\r\n};\r\n\r\nconst makeRoutesConfig = (routes: Array<IRouteParamOrDivider>): Array<PartialRouteObject> => {\r\n    /**\r\n     * First filter out 'divider' string, leaving only objects\r\n     */\r\n    console.log('entered makeRoutesConfig');\r\n    const aRouteParams = routes.filter(item => typeof item === 'object');\r\n    return (aRouteParams as Array<IRouteParam>)\r\n        .filter(item => views[item.elementId] !== undefined)\r\n        .map(o => {\r\n            let ret: PartialRouteObject = {\r\n                path: o.path,\r\n                element: makeElement(o)\r\n            };\r\n            if (typeof o === 'object' && o.children) {\r\n                ret.children = makeRoutesConfig(o.children);\r\n            }\r\n\r\n            return ret;\r\n        });\r\n};\r\n\r\nconst mapStateToProps = (state: { journey: IJourney }) => {\r\n    return {\r\n        routes: state.journey?.rootJourney,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n\r\n    return {\r\n      setJourn: function () {\r\n        dispatch(setJourney(JOURNEY))\r\n      }\r\n    };\r\n  };\r\n\r\nconst DynamicRouter = (props: { routes?: Array<IRouteParamOrDivider>, setJourn: any }) => {\r\n    console.log('entered DynamicRouter FC', window.location.href);\r\n    const { routes, setJourn } = props;\r\n\r\n    const [routesConfig, setRouter] = useState([]);\r\n    useEffect(() => {\r\n        setJourn()\r\n        const rc = makeRoutesConfig(props.routes);\r\n        setRouter(rc);\r\n    }, [routes]);\r\n\r\n    const element = useRoutes(routesConfig);\r\n\r\n    return element;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DynamicRouter);\r\n","import { Action } from \"../actions\"\r\nimport { IJourney } from '../../interfaces/journeys';\r\n\r\nconst setJourney = (journey: IJourney) => {\r\n  return {\r\n    type: Action.SET_JOURNEY,\r\n    payload: journey\r\n  }\r\n};\r\n\r\nexport {setJourney}\r\n","import { Action } from \"../actions\";\r\n\r\nconst counterReducer = (state = 0, action: any) => {\r\n    switch(action.type){\r\n        case Action.DECREMENT:\r\n            return state - 1;\r\n        case Action.INCREMENT:\r\n            return state + 1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer","import { Action } from \"../actions\";\r\nimport { JOURNEY } from \"../../consts\";\r\n\r\nconst INITIAL_STATE = {\r\n  rootJourney: [JOURNEY]\r\n}\r\n\r\nconst journeyReducer = (state = INITIAL_STATE, action: any) => {\r\n  console.log('in journeyReducer with action.type', action.type);\r\n  switch (action.type) {\r\n    case Action.SET_JOURNEY:\r\n      console.log('in journeyReducer with payload', action.payload);\r\n      return { ...state, ...action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default journeyReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport counterReducer from \"./reducers/counter\";\r\nimport journeyReducer from \"./reducers/journey\";\r\n\r\nconst routeReducer = combineReducers({\r\n    counter: counterReducer,\r\n    journey: journeyReducer\r\n});\r\n\r\nexport default routeReducer;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport './App.css';\r\nimport DynamicRouter from './components/dynamicrouter';\r\nimport routeReducer from './store/routeReducer';\r\n\r\nconst store = createStore(routeReducer, composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n),\r\n);\r\n\r\nconst App = (props: any) => {\r\n  console.log(\"public: \", process.env.PUBLIC_URL)\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <DynamicRouter />\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}