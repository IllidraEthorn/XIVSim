{"version":3,"sources":["store/actions.ts","components/views/counter.tsx","consts.ts","components/lib/makenavmenu.tsx","components/navmenu.tsx","components/views/mainlayout.tsx","components/views/welcome.tsx","sim/jobs/dnc/dancer.ts","sim/jobs/jobmods.ts","sim/util/randomRange.ts","sim/util/damagecalc.ts","sim/jobs/sim.ts","sim/jobs/dnc/dancerstate.ts","sim/jobs/dnc/sim.ts","sim/consts/levelmod.ts","components/damagechart.tsx","components/views/dncdemo.tsx","components/dynamicrouter.tsx","store/actions/journey.ts","store/reducers/counter.ts","store/reducers/journey.ts","store/routeReducer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Action","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","connect","state","counter","props","classes","Card","className","CardContent","Typography","color","gutterBottom","CardActions","Button","variant","onClick","dispatch","type","DECREMENT","Divider","orientation","INCREMENT","JOURNEY","rootJourney","path","process","elementId","children","label","icon","NavigationItem","navigate","divider","ListItem","button","ListItemIcon","Icon","ListItemText","primary","journey","console","log","window","location","href","useNavigate","useState","navItems","setNavItems","useEffect","items","makeNavItems","basePath","level","length","views","reduce","acc","next","index","ret","push","key","uri","Path","join","concat","makeNavItemsFactory","makeItems","List","theme","createStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","TAG","MainLayout","React","open","setOpen","handleDrawerClose","CssBaseline","ClickAwayListener","onClickAway","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","paper","Container","Welcome","component","size","jobMods","hp","mp","str","vit","dex","int","mnd","mainStat","autoAttackStat","procs","flourishingCascade","name","flourishingFountain","flourishingWindmill","flourishingShower","flourishingFanDance","buffs","autoAttack","potency","traitDamageMult","autoAttackDelay","cascade","baseCastTime","baseRecastTime","isGCD","comboInteraction","proc","procChance","animationLock","skills","reverseCascade","fountain","comboPotency","comboActions","fountainFall","risingWindmill","bloodshower","saberDance","flourish","cooldown","standardStep","technicalStep","step","standardFinish","prePullStandard","technicalFinish","fanDance","fanDance3","devilment","dancer","dancerJobMods","randomRange","min","max","Math","random","potencyMult","ptc","attackPowerMult","attackPower","floor","detMult","levelMod","determination","main","div","tenacityMult","tenacity","sub","directHitChance","dhit","critChance","crit","critDamageBonus","calcAutoAttackDamage","jobMod","weaponDamage","weaponDelay","traitMult","speed","range","speedMult","calcDamage","weaponDamageMult","Sim","player","maxTime","printLog","currentTime","damageDealt","gcdTimer","autoAttackTimer","comboTimer","comboAction","cooldowns","animLock","this","damage","jumpTimeBy","time","cooldownsJumpBy","buffsJumpBy","totalDamage","dps","toFixed","totalActions","skill","timeToLog","getCurrentTime","includes","chit","baseDamage","stats","det","critC","calcCritChanceFromBuffs","dhitC","calcDHitChanceFromBuffs","calcDamageMultFromBuffs","damageLog","directHit","timestamp","useSkill","comment","skillSpeed","find","cooldownToRemove","filter","getCooldown","removeCooldown","sort","p1","p2","afterTime","map","buff","buffToRemove","getBuff","removeBuff","newArr","forEach","i","ceil","DancerState","esprit","feathers","maxEsprit","maxFeathers","stepsRemaining","inStandard","inTechnical","amount","espritToAdd","feathersToAdd","procToRemove","getProcByName","removeProc","number","setRemainingSteps","getInStandard","getInTechnical","DNCSim","opener","teamGCD","queuedSkill","registerProcs","registerCooldowns","getFeathers","getEsprit","getProcs","getBuffs","onUse","getDancerComment","mult","dancerBuffs","logLine","padStart","toString","procsJumpBy","numToGen","generateEsprit","getInDance","getStepsRemaining","dancerSkills","flourishcd","getShortestGCDProcTimer","getGCDProcToUse","shouldUseSaberDance","toJump","jumpToNextEvent","shift","simulateTeamGCD","doAutoAttack","doNextGCD","doNextOGCD","nextOGCD","getNextOGCD","shouldUseDevilment","shouldUseFlourish","dancerProcs","shouldUseFanDance","dealDamage","jumpToNextGCD","getNextGCD","jumpToAutoAttack","useAutoAttack","dancerAutoAttack","doNextAction","addProc","addCooldown","removeFeather","featherProc","removeEsprit","addBuff","triggerGCD","setInStandard","setInTechnical","removeStep","chance","addFeather","isBursting","addEsprit","procArray","val","levelMod80","threat","DamageChart","dancerBIS","spellSpeed","sim","data","run","createDataPointsPerSecondNew","dataAvg","prev","current","printDamageLogLine","options","chart","id","xaxis","stroke","curve","series","smooth","valsmoothed","height","Component","makeElement","o","createElement","routes","setJourn","SET_JOURNEY","payload","routesConfig","setRouter","rc","makeRoutesConfig","item","undefined","element","useRoutes","counterReducer","action","INITIAL_STATE","journeyReducer","routeReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f8d75c4.chunk.js","sourcesContent":["export enum Action{\r\n    //Counter\r\n    INCREMENT = 'increment',\r\n    DECREMENT = 'decrement',\r\n    // Journey\r\n    SET_JOURNEY = 'set_journey'\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Action } from '../../store/actions';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state: { counter: number }) => {\r\n    return {\r\n        counter: state.counter\r\n    }\r\n}\r\n\r\nlet Counter = (props: { counter?: number, dispatch: Function }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Count: {props.counter}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => { props.dispatch({ type: Action.DECREMENT }) }}>Decrement</Button>\r\n                <Divider orientation=\"vertical\" />\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => { props.dispatch({ type: Action.INCREMENT }) }}>Increment</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(Counter);\r\n","import { IJourney } from './interfaces/journeys';\r\nimport { createMemoryHistory } from 'history'\r\nexport const FORM_NAME = 'editQuestion';\r\nexport const FORM_NEW_QUIZ = 'newQuiz';\r\nexport const FORM_EDIT_CATEGORY = 'editCategory';\r\nexport const DRAWER_WIDTH = 240;\r\n\r\nexport interface ICategory {\r\n  _id: string\r\n  title: string\r\n  slug: string\r\n  description?: string\r\n}\r\n\r\nexport const JOURNEY: IJourney = {\r\n\r\n  rootJourney: [\r\n    {\r\n      path: process.env.PUBLIC_URL,\r\n      elementId: 'main',\r\n      children: [\r\n        { path: '/', elementId: 'welcome', label: 'Home', icon: 'home' },\r\n        'divider',\r\n        { path: '/DNCDemo', elementId: 'dncdemo', label: 'Dancer Demo' },\r\n      ],\r\n    },\r\n  ],\r\n};","import { Divider, ListItemIcon } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Path from 'path-browserify';\r\nimport React from 'react';\r\nimport { NavigateFunction } from 'react-router';\r\nimport { IRouteParamOrDivider } from '../../interfaces/journeys';\r\nimport * as views from '../views/index';\r\n\r\ninterface INavigationItemProps {\r\n  icon?: string\r\n  path: string\r\n  label: string\r\n  divider: boolean\r\n  key: string\r\n  navigate: Function\r\n}\r\n\r\nconst NavigationItem = (props: INavigationItemProps) => {\r\n\r\n  const { icon, path, label, navigate, divider } = props;\r\n\r\n  return (\r\n    <ListItem button divider={divider} onClick={() => navigate(path)}>\r\n      {icon && <ListItemIcon><Icon fontSize=\"small\">{icon}</Icon></ListItemIcon>}\r\n      <ListItemText primary={label} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default function makeNavItemsFactory(navigate: NavigateFunction) {\r\n\r\n  return function makeNavItems(items: Array<IRouteParamOrDivider>, basePath: string = '', level = 1): React.FunctionComponent[] {\r\n\r\n    console.log('entered makeNavItems with count=', items.length);\r\n    console.log('views exports:', views);\r\n\r\n    return items.reduce((acc: Array<any>, next, index) => {\r\n      let ret = [...acc];\r\n\r\n      if (next === 'divider') {\r\n        ret.push(<Divider key={`${level}.${index}`} />);\r\n      } else {\r\n        const uri = Path.join(basePath, next.path);\r\n        if (next.label && next.elementId && views[next.elementId]) {\r\n          ret.push(<NavigationItem\r\n            icon={next.icon}\r\n            path={uri}\r\n            label={next.label}\r\n            navigate={navigate}\r\n            key={`${level}.${index}`}\r\n            divider={!!next.divider} />);\r\n        }\r\n\r\n        if (next.children) {\r\n          ret = ret.concat(makeNavItems(next.children, uri, level + 1));\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }, []);\r\n  };\r\n\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IJourney, IRouteParamOrDivider } from '../interfaces/journeys';\r\nimport makeNavItemsFactory from './lib/makenavmenu';\r\n\r\n\r\nconst mapStateToProps = (state: { journey: IJourney }) => {\r\n  return {\r\n    rootJourney: state.journey?.rootJourney || [],\r\n  };\r\n};\r\n\r\nconst NavMenu = (props: { rootJourney: Array<IRouteParamOrDivider> }) => {\r\n  console.log('entered NavMenu FC', window.location.href);\r\n  const { rootJourney } = props;\r\n\r\n  const navigate = useNavigate();\r\n  const [navItems, setNavItems] = useState([]);\r\n  useEffect(() => {\r\n    const makeItems = makeNavItemsFactory(navigate);\r\n    const items = makeItems(rootJourney);\r\n    setNavItems(items);\r\n  }, [rootJourney]);\r\n\r\n  return (\r\n    <List>\r\n      {navItems}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavMenu);\r\n","import { ClickAwayListener } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { DRAWER_WIDTH } from '../../consts';\r\nimport NavMenu from '../navmenu';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        display: 'flex',\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n        marginLeft: DRAWER_WIDTH,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      drawer: {\r\n        width: DRAWER_WIDTH,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: DRAWER_WIDTH,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -DRAWER_WIDTH,\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n      },\r\n    }),\r\n);\r\n\r\nconst TAG = 'MainLayout';\r\n\r\nexport default function MainLayout() {\r\n\r\n  console.log(TAG, 'Entered MainLayout');\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    console.log(TAG, 'entered handleDrawerOpen');\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    console.log(TAG, 'entered handleDrawerClosed');\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <CssBaseline/>\r\n        <ClickAwayListener onClickAway={\r\n          () => {\r\n            console.log(TAG, 'onClickAway event');\r\n            handleDrawerClose()\r\n          }\r\n        }>\r\n          <div>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                  [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                  <MenuIcon/>\r\n                </IconButton>\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  XIVSim\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n              <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  <ChevronLeftIcon/>\r\n                </IconButton>\r\n              </div>\r\n              <Divider/>\r\n              <NavMenu />\r\n            </Drawer>\r\n          </div>\r\n        </ClickAwayListener>\r\n        <main\r\n            className={clsx(classes.content, {\r\n              [classes.contentShift]: open,\r\n            })}\r\n        >\r\n          <div className={classes.drawerHeader}/>\r\n          <Container>\r\n            <Outlet/>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport DamageChart from '../damagechart';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nlet Welcome = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            Welcome\r\n        </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Welcome to XIVSim\r\n        </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Welcome;","import AutoAttack from \"../autoattack\";\r\nimport Buff from \"../buff\";\r\nimport JobMods from \"../jobmods\";\r\nimport Proc from \"../proc\";\r\nimport Skill from \"../skill\";\r\n\r\nconst jobMods: JobMods = {\r\n    hp: 105,\r\n    mp: 79,\r\n    str: 90,\r\n    vit: 100,\r\n    dex: 115,\r\n    int: 85,\r\n    mnd: 80,\r\n    mainStat: () => {\r\n        return jobMods.dex\r\n    },\r\n    autoAttackStat: () => {\r\n        return jobMods.dex\r\n    }\r\n}\r\n\r\nconst globalTraitMult: number = 1.2\r\nconst globalAnimLock: number = 0.75\r\n\r\n//Not sure how to type this\r\nconst flourishingCascade: Proc = { name: \"Flourishing Cascade\", duration: 20 }\r\nconst flourishingFountain: Proc = { name: \"Flourishing Fountain\", duration: 20 }\r\nconst flourishingWindmill: Proc = { name: \"Flourishing Windmill\", duration: 20 }\r\nconst flourishingShower: Proc = { name: \"Flourishing Shower\", duration: 20 }\r\n\r\nconst flourishingFanDance: Proc = { name: \"Flourishing Fan Dance\", duration: 20 }\r\n\r\nconst procs = {\r\n    flourishingCascade,\r\n    flourishingFountain,\r\n    flourishingWindmill,\r\n    flourishingShower,\r\n\r\n    flourishingFanDance\r\n}\r\n\r\nconst standardFinishBuff: Buff = { name: \"Standard Finish\", duration: 60 }\r\nconst technicalFinishBuff: Buff = { name: \"Technical Finish\", duration: 20 }\r\nconst devilmentBuff: Buff = { name: \"Devilment\", duration: 20 }\r\n\r\nconst buffs = {\r\n    standardFinishBuff,\r\n    technicalFinishBuff,\r\n    devilmentBuff\r\n}\r\n\r\nconst autoAttack: AutoAttack = {\r\n    potency: 110,\r\n    traitDamageMult: 1.0,\r\n    autoAttackDelay: 3.12\r\n}\r\n\r\nconst cascade: Skill = {\r\n    name: \"Cascade\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 250,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    comboInteraction: true,\r\n    proc: procs.flourishingCascade,\r\n    procChance: 0.5,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst fountain: Skill = {\r\n    name: \"Fountain\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 100,\r\n    comboPotency: 300,\r\n    comboActions: [cascade],\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    comboInteraction: true,\r\n    proc: procs.flourishingFountain,\r\n    procChance: 0.5,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst reverseCascade: Skill = {\r\n    name: \"Reverse Cascade\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 300,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst fountainFall: Skill = {\r\n    name: \"Fountainfall\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 350,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst risingWindmill: Skill = {\r\n    name: \"Rising Windmill\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 300,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst bloodshower: Skill = {\r\n    name: \"Bloodshower\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 350,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst saberDance: Skill = {\r\n    name: \"Saber Dance\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 2.5,\r\n    potency: 600,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst flourish: Skill = {\r\n    name: \"Flourish\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 60,\r\n    cooldown: 60,\r\n    traitDamageMult: 0,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst standardStep: Skill = {\r\n    name: \"Standard Step\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    cooldown: 30,\r\n    traitDamageMult: 0,\r\n    isGCD: true,\r\n    animationLock: 1.5\r\n}\r\n\r\nconst prePullStandard: Skill = {\r\n    name: \"Standard Finish\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    potency: 1000,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst technicalStep: Skill = {\r\n    name: \"Technical Step\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    cooldown: 120,\r\n    traitDamageMult: 0,\r\n    isGCD: true,\r\n    animationLock: 1.5\r\n}\r\n\r\nconst step: Skill = {\r\n    name: \"Step\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1,\r\n    traitDamageMult: 0,\r\n    isGCD: true,\r\n    animationLock: 1\r\n}\r\n\r\nconst standardFinish: Skill = {\r\n    name: \"Standard Finish\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    potency: 1000,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst technicalFinish: Skill = {\r\n    name: \"Technical Finish\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.5,\r\n    potency: 1500,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: true,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst devilment: Skill = {\r\n    name: \"Devilment\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 120,\r\n    cooldown: 120,\r\n    traitDamageMult: 0,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst fanDance: Skill = {\r\n    name: \"Fan Dance\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 0.75,\r\n    potency: 150,\r\n    cooldown: 1.01,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock,\r\n    proc: procs.flourishingFanDance,\r\n    procChance: 0.5\r\n}\r\n\r\nconst fanDance3: Skill = {\r\n    name: \"Fan Dance III\",\r\n    baseCastTime: 0,\r\n    baseRecastTime: 1.00,\r\n    potency: 200,\r\n    cooldown: 1.00,\r\n    traitDamageMult: globalTraitMult,\r\n    isGCD: false,\r\n    animationLock: globalAnimLock\r\n}\r\n\r\nconst skills = {\r\n    cascade,\r\n    reverseCascade,\r\n    fountain,\r\n    fountainFall,\r\n    risingWindmill,\r\n    bloodshower,\r\n    saberDance,\r\n    flourish,\r\n    standardStep,\r\n    technicalStep,\r\n    step,\r\n    standardFinish,\r\n    prePullStandard,\r\n    technicalFinish,\r\n    fanDance,\r\n    fanDance3,\r\n    devilment\r\n}\r\n\r\nexport { jobMods as dancerJobMods };\r\nexport { skills as dancerSkills };\r\nexport { autoAttack as dancerAutoAttack };\r\nexport { procs as dancerProcs };\r\nexport { buffs as dancerBuffs };\r\n\r\n","import { dancerJobMods } from './dnc/dancer'\r\n\r\nexport default interface JobMods {\r\n    hp: number,\r\n    mp: number,\r\n    str: number,\r\n    vit: number,\r\n    dex: number,\r\n    int: number,\r\n    mnd: number,\r\n    mainStat(): number,\r\n    autoAttackStat(): number\r\n\r\n}\r\n\r\nconst jobMods = {\r\n    dancer: dancerJobMods\r\n}\r\n\r\nexport { jobMods }\r\n","const randomRange = (min: number, max: number) => {\r\n    return Math.random() * (max - min) + min\r\n}\r\n\r\nexport default randomRange","import { LevelMod } from \"../consts/levelmod\";\r\nimport randomRange from \"./randomRange\";\r\n\r\n//All functions were made using information taken from http://allaganstudies.akhmorning.com/\r\nconst potencyMult = (ptc: number) => {\r\n    return ptc / 100;\r\n}\r\n\r\nconst weaponDamageMult = (levelMod: LevelMod, jobMod: number, weaponDamage: number) => {\r\n    return Math.floor((levelMod.main * jobMod / 1000) + weaponDamage);\r\n}\r\n\r\nconst attackPowerMult = (attackPower: number) => {\r\n    return (Math.floor((165 * (attackPower - 340) / 340) + 100) / 100)\r\n}\r\n\r\nconst detMult = (levelMod: LevelMod, determination: number) => {\r\n    return (Math.floor(130 * (determination - levelMod.main) / levelMod.div + 1000) / 1000)\r\n}\r\n\r\nconst tenacityMult = (levelMod: LevelMod, tenacity: number) => {\r\n    return (Math.floor(100 * (tenacity - levelMod.sub) / levelMod.div + 1000) / 1000)\r\n}\r\n\r\nconst speedMult = (levelMod: LevelMod, speed: number) => {\r\n    return (Math.floor(130 * (speed - levelMod.sub) / levelMod.div + 1000) / 1000)\r\n}\r\n\r\nconst directHitChance = (levelMod: LevelMod, dhit: number) => {\r\n    return (Math.floor(550 * (dhit - levelMod.sub) / levelMod.div) / 10)\r\n}\r\n\r\nconst critChance = (levelMod: LevelMod, crit: number) => {\r\n    return (Math.floor(200 * (crit - levelMod.sub) / levelMod.div + 50) / 10)\r\n}\r\n\r\nconst critDamageBonus = (levelMod: LevelMod, crit: number) => {\r\n    return (Math.floor(200 * (crit - levelMod.sub) / levelMod.div + 1400) / 1000)\r\n}\r\n\r\nconst autoAttack = (levelMod: LevelMod, jobMod: number, weaponDamage: number, weaponDelay: number) => {\r\n    return (Math.floor(Math.floor(levelMod.main * jobMod / 1000 + weaponDamage) * (weaponDelay / 3)))\r\n}\r\n\r\nconst adjustTimeToSpeed = (time: number, speed: number, levelMod: LevelMod) => {\r\n    return Math.floor(Math.floor(100 * 100 * (Math.floor(time * 1000 * (1000 - Math.floor(130 * speed - levelMod.sub / levelMod.div)) / 1000) / 1000)) / 100) / 100\r\n}\r\n\r\nconst calcAutoAttackDamage = (potency: number, levelMod: LevelMod, jobMod: number, weaponDamage: number, weaponDelay: number, attackPower: number, determination: number, tenacity: number, traitMult: number, speed: number, range?: number) => {\r\n    range = range ? range : randomRange(0.95, 1.05)\r\n    return Math.floor(Math.floor(Math.floor(potencyMult(potency) * autoAttack(levelMod, jobMod, weaponDamage, weaponDelay) * attackPowerMult(attackPower) * detMult(levelMod, determination) * tenacityMult(levelMod, tenacity) * traitMult) * speedMult(levelMod, speed)) * range)\r\n}\r\n\r\nconst calcDamage = (potency: number, levelMod: LevelMod, jobMod: number, weaponDamage: number, attackPower: number, determination: number, tenacity: number, traitMult: number, range?: number) => {\r\n    range = range ? range : randomRange(0.95, 1.05)\r\n    return (Math.floor(Math.floor(potencyMult(potency) * weaponDamageMult(levelMod, jobMod, weaponDamage) * attackPowerMult(attackPower) * detMult(levelMod, determination) * tenacityMult(levelMod, tenacity) * traitMult) * range))\r\n}\r\n\r\nconst calcDamageRange = (potency: number, levelMod: LevelMod, jobMod: number, weaponDamage: number, attackPower: number, determination: number, tenacity: number, traitMult: number) => {\r\n    return `${calcDamage(potency, levelMod, jobMod, weaponDamage, attackPower, determination, tenacity, traitMult, 0.95)} - ${calcDamage(potency, levelMod, jobMod, weaponDamage, attackPower, determination, tenacity, traitMult, 1.05)}`\r\n}\r\n\r\nexport { directHitChance, critChance, critDamageBonus, speedMult, adjustTimeToSpeed, calcAutoAttackDamage, calcDamage };\r\n\r\n","import { LevelMod } from \"../consts/levelmod\";\r\nimport { Player } from \"../player/player\";\r\nimport { calcAutoAttackDamage, calcDamage, critChance, critDamageBonus, directHitChance } from \"../util/damagecalc\";\r\nimport AutoAttack from \"./autoattack\";\r\nimport Buff from \"./buff\";\r\nimport CommentLog from \"./commentlog\";\r\nimport Cooldown from \"./cooldown\";\r\nimport DamageLog from \"./damagelog\";\r\nimport Skill from \"./skill\";\r\n\r\nexport default abstract class Sim {\r\n    player: Player;\r\n    levelMod: LevelMod;\r\n    printLog: boolean;\r\n    private currentTime: number;\r\n    maxTime: number;\r\n    damageDealt: number;\r\n    gcdTimer: number;\r\n    autoAttackTimer: number;\r\n    comboTimer: number;\r\n    comboAction: Skill;\r\n    log: Array<DamageLog>;\r\n    cooldowns: Array<Cooldown>;\r\n    animLock: number;\r\n    buffs: Array<Buff>\r\n\r\n    constructor(player: Player, levelMod: LevelMod, maxTime: number, printLog?: boolean) {\r\n        this.player = player\r\n        this.levelMod = levelMod\r\n        this.printLog = printLog\r\n        this.currentTime = 0\r\n        this.maxTime = maxTime * 100\r\n        this.damageDealt = 0\r\n        this.gcdTimer = 0\r\n        this.comboTimer = 0\r\n        this.autoAttackTimer = 0\r\n        this.log = []\r\n        this.cooldowns = []\r\n        this.animLock = 0\r\n        this.buffs = []\r\n    }\r\n\r\n    dealDamage(damage: number): void {\r\n        this.damageDealt += damage;\r\n    }\r\n\r\n    jumpToNextGCD(): void {\r\n        this.jumpTimeBy(this.gcdTimer);\r\n    }\r\n\r\n    jumpToAutoAttack(): void {\r\n        this.jumpTimeBy(this.autoAttackTimer);\r\n    }\r\n\r\n    //Ends the animation lock\r\n    jumpAnimationLock(): void {\r\n        this.jumpTimeBy(this.animLock)\r\n    }\r\n\r\n    //Jumps forward in time, updating the auto attack timer and gcd timer\r\n    jumpTimeBy(time: number): void {\r\n        this.currentTime += time\r\n        this.gcdTimer = Math.max(this.gcdTimer - time, 0)\r\n        this.autoAttackTimer = Math.max(this.autoAttackTimer - time, 0)\r\n        this.comboTimer = Math.max(this.comboTimer - time, 0)\r\n        this.animLock = Math.max(this.animLock - time, 0)\r\n        this.cooldownsJumpBy(time)\r\n        this.buffsJumpBy(time)\r\n    }\r\n\r\n    summary(): any {\r\n        return {\r\n            totalDamage: this.damageDealt,\r\n            dps: (this.damageDealt * 100 / this.currentTime).toFixed(2),\r\n            duration: this.currentTime / 100,\r\n            totalActions: this.log.length\r\n        }\r\n    }\r\n\r\n    getCurrentTime(): number {\r\n        return this.currentTime\r\n    }\r\n\r\n    useSkill(skill: Skill): DamageLog {\r\n        const timeToLog = this.getCurrentTime();\r\n\r\n        let potency = skill.potency ? skill.potency : 0;\r\n        if (skill.comboPotency && this.comboTimer > 0 && skill.comboActions?.includes(this.comboAction)) {\r\n            potency = skill.comboPotency\r\n            this.comboTimer = 0\r\n        }\r\n\r\n        let chit = false\r\n        let dhit = false;\r\n        let damage: number = 0\r\n\r\n        if (potency > 0) {\r\n            const baseDamage: number = calcDamage(potency, this.levelMod, this.player.jobMod.mainStat(), this.player.stats.weaponDamage, this.player.stats.mainStat, this.player.stats.det, this.player.stats.tenacity, 1.2)\r\n            const critC: number = critChance(this.levelMod, this.player.stats.crit) / 100 + this.calcCritChanceFromBuffs();\r\n            const dhitC: number = directHitChance(this.levelMod, this.player.stats.dhit) / 100 + this.calcDHitChanceFromBuffs();\r\n\r\n            damage = Math.floor(baseDamage * this.calcDamageMultFromBuffs())\r\n\r\n            if (Math.random() <= critC) {\r\n                damage = Math.floor(damage * critDamageBonus(this.levelMod, this.player.stats.crit));\r\n                chit = true;\r\n            }\r\n\r\n            if (Math.random() <= dhitC) {\r\n                damage = Math.floor(damage * 1.25);\r\n                dhit = true;\r\n            }\r\n        } else {\r\n            damage = 0\r\n        }\r\n\r\n        const damageLog: DamageLog = {\r\n            name: skill.name,\r\n            damage: damage,\r\n            totalDamage: this.damageDealt,\r\n            potency: potency,\r\n            directHit: dhit,\r\n            crit: chit,\r\n            timestamp: timeToLog\r\n        }\r\n\r\n        if (skill.comboInteraction) {\r\n            this.comboAction = skill;\r\n            this.comboTimer = 10 * 100;\r\n        }\r\n\r\n        if (skill.animationLock) {\r\n            this.animLock = skill.animationLock * 100\r\n        }\r\n\r\n        return damageLog\r\n    }\r\n\r\n    useOGCD(skill: Skill): DamageLog | CommentLog {\r\n\r\n        if (skill.potency) {\r\n            return this.useSkill(skill)\r\n        }\r\n\r\n        if (skill.animationLock) {\r\n            this.animLock = skill.animationLock\r\n        }\r\n\r\n        return { timestamp: this.getCurrentTime(), comment: `Used ${skill.name}` }\r\n    }\r\n\r\n    useAutoAttack(autoAttack: AutoAttack): DamageLog {\r\n        const timeToLog = this.getCurrentTime();\r\n\r\n        const baseDamage: number = calcAutoAttackDamage(autoAttack.potency, this.levelMod, this.player.jobMod.autoAttackStat(), this.player.stats.weaponDamage, autoAttack.autoAttackDelay, this.player.stats.mainStat, this.player.stats.det, this.player.stats.tenacity, autoAttack.traitDamageMult, this.player.stats.skillSpeed)\r\n        const critC: number = critChance(this.levelMod, this.player.stats.crit) / 100 + this.calcCritChanceFromBuffs();\r\n        const dhitC: number = directHitChance(this.levelMod, this.player.stats.dhit) / 100 + this.calcDHitChanceFromBuffs();\r\n\r\n        let damage: number = Math.floor(baseDamage * this.calcDamageMultFromBuffs())\r\n\r\n        //console.log(\"Mult\", this.calcDamageMultFromBuffs())\r\n        let chit = false\r\n        let dhit = false;\r\n\r\n        if (Math.random() <= critC) {\r\n            damage = Math.floor(damage * critDamageBonus(this.levelMod, this.player.stats.crit));\r\n            chit = true;\r\n        }\r\n\r\n        if (Math.random() <= dhitC) {\r\n            damage = Math.floor(damage * 1.25);\r\n            dhit = true;\r\n        }\r\n\r\n        const damageLog: DamageLog = {\r\n            name: \"Auto Attack\",\r\n            damage: damage,\r\n            totalDamage: this.damageDealt,\r\n            potency: autoAttack.potency,\r\n            directHit: dhit,\r\n            crit: chit,\r\n            timestamp: timeToLog\r\n        }\r\n\r\n        return damageLog\r\n    }\r\n\r\n    getCooldown(name: string): Cooldown {\r\n        return this.cooldowns.find((cooldown: Cooldown) => {\r\n            if (cooldown.name === name) {\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    removeCooldown(cooldownToRemove: Cooldown): void {\r\n        this.cooldowns = this.cooldowns.filter((cooldown) => cooldown.name !== cooldownToRemove.name)\r\n    }\r\n\r\n    addCooldown(cooldown: Cooldown): void {\r\n        //If the cooldown already exists\r\n        if (this.getCooldown(cooldown.name)) {\r\n            this.removeCooldown(cooldown)\r\n        }\r\n\r\n        this.cooldowns.push({ name: cooldown.name, duration: cooldown.duration * 100 })\r\n\r\n        this.cooldowns.sort((p1, p2) => p1.duration - p2.duration)\r\n    }\r\n\r\n    //Simulates time for all cooldowns, removing any cooldowns that have run out\r\n    cooldownsJumpBy(time: number): void {\r\n\r\n        let afterTime = this.cooldowns.map((cooldown) => {\r\n            cooldown.duration = cooldown.duration - time\r\n            return cooldown\r\n        });\r\n        this.cooldowns = afterTime.filter((cooldown) => cooldown.duration > 0.001)\r\n    }\r\n\r\n    getBuff(name: string): Buff {\r\n        return this.buffs.find((buff: Buff) => {\r\n            if (buff.name === name) {\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    getBuffs(): Array<Buff> {\r\n        return this.buffs\r\n    }\r\n\r\n    removeBuff(buffToRemove: Buff): void {\r\n        this.buffs = this.buffs.filter((buff) => buff.name !== buffToRemove.name)\r\n    }\r\n\r\n    addBuff(buff: Buff): void {\r\n        //If the buff already exists\r\n        if (this.getBuff(buff.name)) {\r\n            this.removeBuff(buff)\r\n        }\r\n\r\n        this.buffs.push({ name: buff.name, duration: buff.duration * 100 })\r\n\r\n        this.buffs.sort((p1, p2) => p1.duration - p2.duration)\r\n    }\r\n\r\n    //Simulates time for all buffs, removing any buffs that have run out\r\n    buffsJumpBy(time: number): void {\r\n\r\n        let afterTime = this.buffs.map((buff) => {\r\n            buff.duration = buff.duration - time\r\n            return buff\r\n        });\r\n        this.buffs = afterTime.filter((buff) => buff.duration > 0.001)\r\n    }\r\n\r\n    triggerGCD(time: number): void {\r\n        this.gcdTimer = time\r\n    }\r\n\r\n    calcDamageMultFromBuffs(): number {\r\n        return 1\r\n    }\r\n\r\n    calcCritChanceFromBuffs(): number {\r\n        return 0\r\n    }\r\n\r\n    calcDHitChanceFromBuffs(): number {\r\n        return 0\r\n    }\r\n\r\n    createDataPoints(): Array<number[]> {\r\n        let newArr: number[][] = [[0, 0]]\r\n        this.log.forEach((damageLog) => {\r\n            if (damageLog.damage === 0) {\r\n                return\r\n            }\r\n            if (damageLog.timestamp / 100 === newArr[newArr.length - 1][0]) {\r\n                newArr[newArr.length - 1][1] = newArr[newArr.length - 1][1] + damageLog.damage\r\n            }\r\n            else {\r\n                newArr.push([damageLog.timestamp / 100, damageLog.damage])\r\n            }\r\n        })\r\n        return newArr\r\n    }\r\n\r\n    createDataPointsPerSecond(): Array<number[]> {\r\n        let newArr: number[][] = [[0, 0]]\r\n        this.log.forEach((damageLog) => {\r\n            if (damageLog.damage === 0) {\r\n                return\r\n            }\r\n            if (Math.floor(damageLog.timestamp / 100) === newArr[newArr.length - 1][0]) {\r\n                newArr[newArr.length - 1][1] = newArr[newArr.length - 1][1] + damageLog.damage\r\n            }\r\n            else {\r\n                newArr.push([Math.floor(damageLog.timestamp / 100), damageLog.damage])\r\n            }\r\n        })\r\n        return newArr\r\n    }\r\n\r\n    createDataPointsPerSecondNew(): Array<number[]> {\r\n        let newArr: number[][] = []\r\n        for (let i = 0; i < Math.ceil(this.log[this.log.length - 1].timestamp / 100) + 1; i++) {\r\n            newArr.push([i, 0])\r\n        }\r\n        console.log(\"Length: \", newArr.length)\r\n        console.log(newArr)\r\n        this.log.forEach((damageLog) => {\r\n            newArr[Math.ceil(damageLog.timestamp / 100)][1] = newArr[Math.ceil(damageLog.timestamp / 100)][1] + damageLog.damage\r\n        })\r\n        return newArr\r\n    }\r\n\r\n    abstract printDamageLogLine(damageLog: DamageLog): void;\r\n\r\n    abstract getNextGCD(): Skill;\r\n\r\n    abstract doNextAction(): DamageLog;\r\n\r\n    abstract run(): void;\r\n}","import Proc from \"../proc\"\r\n\r\nexport default class DancerState {\r\n    private esprit: number\r\n    private feathers: number\r\n\r\n    private maxEsprit: number\r\n    private maxFeathers: number\r\n\r\n    private procs: Array<Proc>\r\n\r\n    private stepsRemaining: number\r\n    private inStandard: boolean\r\n    private inTechnical: boolean\r\n\r\n    constructor() {\r\n        this.esprit = 0\r\n        this.feathers = 0\r\n\r\n        this.maxEsprit = 100\r\n        this.maxFeathers = 4\r\n\r\n        this.procs = []\r\n\r\n        this.stepsRemaining = 0\r\n        this.inStandard = false\r\n        this.inTechnical = false\r\n    }\r\n\r\n    getEsprit(): number {\r\n        return this.esprit\r\n    }\r\n\r\n    getFeathers(): number {\r\n        return this.feathers\r\n    }\r\n\r\n    //Adds give amount of esprit and returns the number of esprit added (amount - returned value = overcap)\r\n    addEsprit(amount: number): number {\r\n        let espritToAdd: number = Math.min(this.maxEsprit - this.esprit, amount)\r\n        this.esprit = this.esprit + espritToAdd\r\n\r\n        return espritToAdd\r\n    }\r\n\r\n    //Adds 1 feather (or given amount) and returns the number of feathers added (amount - returned value = overcap)\r\n    addFeather(amount: number = 1): number {\r\n        let feathersToAdd: number = Math.min(this.maxFeathers - this.feathers, amount)\r\n        this.feathers = this.feathers + feathersToAdd\r\n\r\n        return feathersToAdd\r\n    }\r\n\r\n    removeEsprit(amount: number): boolean {\r\n        if (this.esprit < amount) {\r\n            return false\r\n        }\r\n        this.esprit = (this.esprit - amount)\r\n        return true\r\n    }\r\n\r\n    removeFeather(): boolean {\r\n        if (this.feathers < 1) {\r\n            return false\r\n        }\r\n        this.feathers = this.feathers - 1\r\n        return true\r\n    }\r\n\r\n    getProcs(): Array<Proc> {\r\n        return this.procs\r\n    }\r\n\r\n    getProcByName(name: string): Proc {\r\n        return this.procs.find((proc: Proc) => {\r\n            if (proc.name === name) {\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    removeProc(procToRemove: Proc): void {\r\n        this.procs = this.procs.filter((proc) => proc.name !== procToRemove.name)\r\n    }\r\n\r\n    addProc(proc: Proc): void {\r\n        //If the proc already exists\r\n        if (this.getProcByName(proc.name)) {\r\n            this.removeProc(proc)\r\n        }\r\n\r\n        this.procs.push({ name: proc.name, duration: proc.duration * 100 })\r\n\r\n        this.procs.sort((p1, p2) => p1.duration - p2.duration)\r\n    }\r\n\r\n    //Simulates time for all procs, removing any procs that have run out\r\n    procsJumpBy(time: number): void {\r\n\r\n        let afterTime = this.procs.map((proc) => {\r\n            proc.duration = proc.duration - time\r\n            return proc\r\n        });\r\n        this.procs = afterTime.filter((proc) => proc.duration > 0)\r\n    }\r\n\r\n    getStepsRemaining(): number {\r\n        return this.stepsRemaining;\r\n    }\r\n\r\n    removeStep(number: number = 1): void {\r\n        this.stepsRemaining = Math.max(this.stepsRemaining - number, 0);\r\n    }\r\n\r\n    setRemainingSteps(number: number): void {\r\n        this.stepsRemaining = number;\r\n    }\r\n\r\n    setInStandard(inStandard: boolean): void {\r\n        if (inStandard) {\r\n            this.inStandard = true\r\n            this.setRemainingSteps(2)\r\n        } else {\r\n            this.inStandard = false\r\n        }\r\n    }\r\n\r\n    setInTechnical(inTechnical: boolean): void {\r\n        if (inTechnical) {\r\n            this.inTechnical = true\r\n            this.setRemainingSteps(4)\r\n        } else {\r\n            this.inTechnical = false\r\n        }\r\n    }\r\n\r\n    getInStandard(): boolean {\r\n        return this.inStandard\r\n    }\r\n\r\n    getInTechnical(): boolean {\r\n        return this.inTechnical\r\n    }\r\n\r\n    getInDance(): boolean {\r\n        return (this.getInStandard() || this.getInTechnical())\r\n    }\r\n}\r\n","import { LevelMod } from \"../../consts/levelmod\";\r\nimport { Player } from \"../../player/player\";\r\nimport AutoAttack from \"../autoattack\";\r\nimport DamageLog from \"../damagelog\";\r\nimport Sim from \"../sim\";\r\nimport Skill from \"../skill\";\r\nimport { dancerAutoAttack, dancerBuffs, dancerProcs, dancerSkills } from \"./dancer\";\r\nimport DancerState from \"./dancerstate\";\r\n\r\nexport default class DNCSim extends Sim {\r\n\r\n    opener: Array<Skill>\r\n    state: DancerState\r\n    teamGCD: number\r\n    queuedSkill: Skill\r\n\r\n    constructor(player: Player, levelMod: LevelMod, maxTime: number, opener?: Array<Skill>, printLog?: boolean) {\r\n        super(player, levelMod, maxTime, printLog);\r\n        this.opener = opener\r\n        this.state = new DancerState()\r\n        this.teamGCD = 0\r\n        this.registerProcs()\r\n        this.registerCooldowns()\r\n    }\r\n\r\n    getDancerComment(): { feathers: number, esprit: number, procs: string, buffs: string, cooldowns: string, gcdTimer: number } {\r\n        return {\r\n            feathers: this.state.getFeathers(),\r\n            esprit: this.state.getEsprit(),\r\n            procs: this.state.getProcs().reduce((acc: string, proc) => {\r\n                return acc + `${proc.name}(${(proc.duration / 100).toFixed(2)}) `\r\n            }, \"\"),\r\n            buffs: this.getBuffs().reduce((acc: string, buff) => {\r\n                return acc + `${buff.name}(${(buff.duration / 100).toFixed(2)}) `\r\n            }, \"\"),\r\n            cooldowns: this.cooldowns.reduce((acc: string, cooldown) => {\r\n                return acc + `${cooldown.name}(${(cooldown.duration / 100).toFixed(2)}) `\r\n            }, \"\"),\r\n            gcdTimer: this.gcdTimer\r\n        }\r\n    }\r\n\r\n    useSkill(skill: Skill): DamageLog {\r\n        let log: DamageLog = super.useSkill(skill)\r\n        if (skill.onUse) {\r\n            skill.onUse(this.state);\r\n        }\r\n        log.comment = this.getDancerComment();\r\n        return log\r\n    }\r\n\r\n    useOGCD(skill: Skill): DamageLog {\r\n        let log: any = super.useOGCD(skill)\r\n        if (skill.onUse) {\r\n            skill.onUse(this.state);\r\n        }\r\n        log.comment = this.getDancerComment();\r\n        if (!log.name) {\r\n            return {\r\n                name: skill.name,\r\n                damage: 0,\r\n                totalDamage: this.damageDealt,\r\n                potency: 0,\r\n                directHit: false,\r\n                crit: false,\r\n                timestamp: log.timestamp,\r\n                comment: log.comment\r\n            }\r\n        }\r\n        return log\r\n    }\r\n\r\n    useAutoAttack(autoAttack: AutoAttack): DamageLog {\r\n        let log: DamageLog = super.useAutoAttack(autoAttack)\r\n        log.comment = this.getDancerComment();\r\n        return log\r\n    }\r\n\r\n    calcDamageMultFromBuffs(): number {\r\n        let mult: number = 1\r\n        this.getBuffs().forEach((buff) => {\r\n            switch (buff.name) {\r\n                case dancerBuffs.standardFinishBuff.name:\r\n                    mult = mult * 1.05\r\n                    break\r\n                case dancerBuffs.technicalFinishBuff.name:\r\n                    mult = mult * 1.05\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n        return mult\r\n    }\r\n\r\n    calcCritChanceFromBuffs(): number {\r\n        let mult: number = 0\r\n        this.getBuffs().forEach((buff) => {\r\n            switch (buff.name) {\r\n                case dancerBuffs.devilmentBuff.name:\r\n                    mult = mult + 0.2\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n        return mult\r\n    }\r\n\r\n    calcDHitChanceFromBuffs(): number {\r\n        let mult: number = 0\r\n        this.getBuffs().forEach((buff) => {\r\n            switch (buff.name) {\r\n                case dancerBuffs.devilmentBuff.name:\r\n                    mult = mult + 0.2\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n        return mult\r\n    }\r\n\r\n    printDamageLogLine(damageLog: DamageLog): void {\r\n        let logLine: string = `${(damageLog.timestamp / 100).toFixed(2).padStart(6, ' ')}| ${damageLog.potency.toString().padStart(4, ' ')}p | Feathers: ${damageLog.comment?.feathers} Esprit: ${damageLog.comment?.esprit.toString().padStart(3, ' ')} | ${damageLog.damage.toString().padStart(6, ' ')} | ${damageLog.name} `;\r\n\r\n        if (damageLog.crit) {\r\n            logLine += \"C\"\r\n        }\r\n        if (damageLog.directHit) {\r\n            logLine += \"D\"\r\n        }\r\n\r\n        logLine = logLine + ` | Procs: ${damageLog.comment?.procs}`\r\n\r\n        //logLine = logLine + ` | GCD Timer: ${damageLog.comment?.gcdTimer}`\r\n\r\n        //logLine = logLine + ` | Buffs: ${damageLog.comment?.buffs}`\r\n\r\n        //logLine = logLine + ` | Cooldowns: ${damageLog.comment?.cooldowns}`\r\n        console.log(logLine);\r\n    }\r\n\r\n    jumpTimeBy(time: number): void {\r\n        this.state.procsJumpBy(time);\r\n        this.teamGCD = Math.max(this.teamGCD - time, 0)\r\n        super.jumpTimeBy(time)\r\n    }\r\n\r\n    simulateTeamGCD(): void {\r\n        let numToGen = 0\r\n\r\n        if (this.getBuff(dancerBuffs.technicalFinishBuff.name)) {\r\n            numToGen = 7\r\n        } else if (this.getBuff(dancerBuffs.standardFinishBuff.name)) {\r\n            numToGen = 2\r\n        }\r\n\r\n        for (let i = 0; i < numToGen; i++) {\r\n            //console.log(\"Team esprit\")\r\n            this.generateEsprit(0.2)\r\n        }\r\n    }\r\n\r\n    getNextGCD(): Skill {\r\n        if (this.state.getInDance()) {\r\n            if (this.state.getStepsRemaining() > 0) {\r\n                return dancerSkills.step\r\n            }\r\n            if (this.state.getStepsRemaining() === 0) {\r\n                if (this.state.getInStandard()) {\r\n                    return dancerSkills.standardFinish\r\n                }\r\n                if (this.state.getInTechnical()) {\r\n                    return dancerSkills.technicalFinish\r\n                }\r\n            }\r\n        }\r\n        if (!this.getCooldown(dancerSkills.standardStep.name)) {\r\n            return dancerSkills.standardStep\r\n        }\r\n        if (!this.getCooldown(dancerSkills.technicalStep.name)) {\r\n            return dancerSkills.technicalStep\r\n        }\r\n        //Ensure we dont let flourish drift\r\n        let flourishcd = this.getCooldown(dancerSkills.flourish.name) ? this.getCooldown(dancerSkills.flourish.name).duration : 0\r\n        if (this.state.getEsprit() >= 50 && this.getShortestGCDProcTimer().procs === 0 && flourishcd <= 250) {\r\n            return dancerSkills.saberDance\r\n        }\r\n        if (this.getShortestGCDProcTimer().procs > 0 && flourishcd <= 250) {\r\n            return this.getGCDProcToUse()\r\n        }\r\n\r\n        if (this.getShortestGCDProcTimer().procs * 250 > this.getShortestGCDProcTimer().duration) {\r\n            return this.getGCDProcToUse()\r\n        }\r\n        if (this.state.getEsprit() >= 50 && this.shouldUseSaberDance()) {\r\n            return dancerSkills.saberDance\r\n        }\r\n        if (this.getGCDProcToUse()) {\r\n            return this.getGCDProcToUse()\r\n        }\r\n        if (this.comboAction == dancerSkills.cascade) {\r\n            return dancerSkills.fountain\r\n        }\r\n        return dancerSkills.cascade\r\n    }\r\n\r\n    jumpToNextEvent(filter: boolean = false): void {\r\n        let toJump: Array<number> = [this.autoAttackTimer, this.gcdTimer, this.teamGCD, this.cooldowns[0]?.duration]\r\n        if (!filter)\r\n            toJump.push(this.animLock)\r\n\r\n        toJump = toJump.sort((p1, p2) => p1 - p2)\r\n\r\n        if (toJump[0]) {\r\n            this.jumpTimeBy(toJump[0])\r\n        }\r\n    }\r\n\r\n    //Figure out if we should do a gcd, ogcd, auto attack, wait etc\r\n    doNextAction(filter: boolean = false): DamageLog {\r\n        this.jumpToNextEvent(filter)\r\n\r\n        if (!this.queuedSkill && this.opener.length > 0) {\r\n            this.queuedSkill = this.opener.shift()\r\n        }\r\n\r\n        if (this.teamGCD === 0) {\r\n            this.simulateTeamGCD()\r\n            //console.log(\"thing\", this.getCurrentTime())\r\n            this.teamGCD = 250\r\n        }\r\n        if (this.autoAttackTimer === 0) {\r\n            return this.doAutoAttack()\r\n        }\r\n        if (this.queuedSkill) {\r\n            if (this.gcdTimer === 0) {\r\n                if (this.queuedSkill.isGCD) {\r\n                    const queuedSkill = this.queuedSkill\r\n                    this.queuedSkill = null\r\n                    return this.doNextGCD(queuedSkill)\r\n                }\r\n            }\r\n            if (this.animLock === 0) {\r\n                if (!this.queuedSkill.isGCD) {\r\n                    const queuedSkill = this.queuedSkill\r\n                    this.queuedSkill = null\r\n                    return this.doNextOGCD(queuedSkill)\r\n                }\r\n                this.jumpToNextEvent(true)\r\n            }\r\n        } else {\r\n            if (this.gcdTimer === 0) {\r\n                return this.doNextGCD()\r\n            }\r\n            if (this.animLock === 0) {\r\n                let nextOGCD: Skill = this.getNextOGCD()\r\n                if (nextOGCD) {\r\n                    return this.doNextOGCD()\r\n                } else {\r\n                    this.jumpToNextEvent(true)\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    getNextOGCD(): Skill {\r\n        if (this.animLock > 0) {\r\n            return null\r\n        }\r\n        if (!this.getCooldown(dancerSkills.devilment.name) && dancerSkills.devilment.animationLock * 100 <= this.gcdTimer && this.shouldUseDevilment()) {\r\n            return dancerSkills.devilment\r\n        }\r\n        if (!this.getCooldown(dancerSkills.flourish.name) && dancerSkills.flourish.animationLock * 100 <= this.gcdTimer && this.shouldUseFlourish()) {\r\n            return dancerSkills.flourish\r\n        }\r\n        if (!this.getCooldown(dancerSkills.fanDance3.name) && dancerSkills.fanDance3.animationLock * 100 <= this.gcdTimer && this.state.getProcByName(dancerProcs.flourishingFanDance.name)) {\r\n            return dancerSkills.fanDance3\r\n        }\r\n        if (!(this.getCooldown(dancerSkills.fanDance.name)) && dancerSkills.fanDance.animationLock * 100 <= this.gcdTimer && this.shouldUseFanDance()) {\r\n            return dancerSkills.fanDance\r\n        }\r\n        return null\r\n    }\r\n\r\n    doNextOGCD(skill?: Skill): DamageLog {\r\n        if (!skill) {\r\n            skill = this.getNextOGCD()\r\n        }\r\n\r\n        let damageLog: DamageLog;\r\n\r\n        damageLog = this.useSkill(skill)\r\n        if (damageLog.damage > 0) {\r\n            this.dealDamage(damageLog.damage)\r\n        }\r\n\r\n        return damageLog;\r\n    }\r\n\r\n    //Perform the next gcd\r\n    doNextGCD(skill?: Skill): DamageLog {\r\n        this.jumpToNextGCD();\r\n\r\n        if (!skill) {\r\n            skill = this.getNextGCD()\r\n        }\r\n\r\n        const damageLog: DamageLog = this.useSkill(skill)\r\n\r\n        this.dealDamage(damageLog.damage);\r\n\r\n        this.gcdTimer = skill.baseRecastTime * 100;\r\n\r\n        return damageLog;\r\n    }\r\n\r\n    //Perform an auto attack\r\n    doAutoAttack(): DamageLog {\r\n        this.jumpToAutoAttack();\r\n\r\n        const damageLog: DamageLog = this.useAutoAttack(dancerAutoAttack)\r\n\r\n        this.dealDamage(damageLog.damage)\r\n\r\n        this.autoAttackTimer = dancerAutoAttack.autoAttackDelay * 100;\r\n\r\n        return damageLog;\r\n    }\r\n\r\n    run(): void {\r\n        let damageLog: DamageLog;\r\n        while (this.getCurrentTime() < this.maxTime) {\r\n            damageLog = this.doNextAction();\r\n            if (damageLog) {\r\n                this.log.push(damageLog)\r\n                //this.printDamageLogLine(damageLog)\r\n            } else if (false) {\r\n                this.log.push({\r\n                    name: \"Verbose\",\r\n                    damage: 0,\r\n                    totalDamage: this.damageDealt,\r\n                    potency: 0,\r\n                    directHit: false,\r\n                    crit: false,\r\n                    timestamp: this.getCurrentTime(),\r\n                    comment: this.getDancerComment()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    registerProcs(): void {\r\n        dancerSkills.cascade.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            if (Math.random() < dancerSkills.cascade.procChance) {\r\n                this.state.addProc(dancerSkills.cascade.proc)\r\n            }\r\n        }\r\n\r\n        dancerSkills.fountain.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            if (Math.random() < dancerSkills.fountain.procChance) {\r\n                this.state.addProc(dancerSkills.fountain.proc)\r\n            }\r\n        }\r\n\r\n        dancerSkills.fanDance.onUse = (damageLog: DamageLog) => {\r\n            if (Math.random() < dancerSkills.fanDance.procChance) {\r\n                this.state.addProc(dancerSkills.fanDance.proc)\r\n            }\r\n            this.addCooldown({ name: dancerSkills.fanDance.name, duration: dancerSkills.fanDance.cooldown })\r\n            this.state.removeFeather()\r\n        }\r\n\r\n        dancerSkills.fanDance3.onUse = (damageLog: DamageLog) => {\r\n            this.state.removeProc(dancerProcs.flourishingFanDance)\r\n            this.addCooldown({ name: dancerSkills.fanDance3.name, duration: dancerSkills.fanDance3.cooldown })\r\n        }\r\n\r\n        dancerSkills.reverseCascade.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingCascade)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.fountainFall.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingFountain)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.risingWindmill.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingWindmill)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.bloodshower.onUse = (damageLog: DamageLog) => {\r\n            this.generateEsprit()\r\n            this.state.removeProc(dancerProcs.flourishingShower)\r\n            this.featherProc(0.5)\r\n        }\r\n\r\n        dancerSkills.saberDance.onUse = (damageLog: DamageLog) => {\r\n            this.state.removeEsprit(50)\r\n        }\r\n    }\r\n\r\n    registerCooldowns(): void {\r\n        dancerSkills.flourish.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.flourish.name, duration: dancerSkills.flourish.cooldown })\r\n            this.state.addProc(dancerProcs.flourishingCascade)\r\n            this.state.addProc(dancerProcs.flourishingFountain)\r\n            this.state.addProc(dancerProcs.flourishingWindmill)\r\n            this.state.addProc(dancerProcs.flourishingShower)\r\n            this.state.addProc(dancerProcs.flourishingFanDance)\r\n        }\r\n\r\n        dancerSkills.devilment.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.devilment.name, duration: dancerSkills.devilment.cooldown })\r\n            this.addBuff({ name: dancerBuffs.devilmentBuff.name, duration: dancerBuffs.devilmentBuff.duration })\r\n        }\r\n\r\n        dancerSkills.standardStep.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.standardStep.name, duration: dancerSkills.standardStep.cooldown })\r\n            this.triggerGCD(1.5)\r\n            this.state.setRemainingSteps(2)\r\n            this.state.setInStandard(true)\r\n        }\r\n\r\n        dancerSkills.technicalStep.onUse = (damageLog: DamageLog) => {\r\n            this.addCooldown({ name: dancerSkills.technicalStep.name, duration: dancerSkills.technicalStep.cooldown })\r\n            this.triggerGCD(1.5)\r\n            this.state.setRemainingSteps(4)\r\n            this.state.setInTechnical(true)\r\n        }\r\n\r\n        dancerSkills.step.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.0)\r\n            this.state.removeStep()\r\n        }\r\n\r\n        dancerSkills.standardFinish.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.5)\r\n            this.state.setInStandard(false)\r\n            this.addBuff({ name: dancerBuffs.standardFinishBuff.name, duration: dancerBuffs.standardFinishBuff.duration })\r\n        }\r\n\r\n        dancerSkills.prePullStandard.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.5)\r\n            this.state.setInStandard(false)\r\n            this.addBuff({ name: dancerBuffs.standardFinishBuff.name, duration: dancerBuffs.standardFinishBuff.duration })\r\n            this.addCooldown({ name: dancerSkills.standardStep.name, duration: dancerSkills.standardStep.cooldown - 15 })\r\n        }\r\n\r\n        dancerSkills.technicalFinish.onUse = (damageLog: DamageLog) => {\r\n            this.triggerGCD(1.5)\r\n            this.state.setInTechnical(false)\r\n            this.addBuff({ name: dancerBuffs.technicalFinishBuff.name, duration: dancerBuffs.technicalFinishBuff.duration })\r\n        }\r\n    }\r\n\r\n    featherProc(chance: number): boolean {\r\n        if (Math.random() < chance) {\r\n            this.state.addFeather()\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    shouldUseFlourish(): boolean {\r\n        if (/*this.state.getProcByName(dancerProcs.flourishingCascade.name) || this.state.getProcByName(dancerProcs.flourishingFountain.name) ||*/ this.state.getProcByName(dancerProcs.flourishingFanDance.name)) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    shouldUseFanDance(): boolean {\r\n        if (!this.isBursting() && (this.state.getProcByName(dancerProcs.flourishingFanDance.name) || (this.state.getFeathers() < 4))) {\r\n            return false\r\n        } else if (this.state.getFeathers() > 0) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    generateEsprit(chance: number = 0.3): void {\r\n        if (Math.random() < chance) {\r\n            this.state.addEsprit(10)\r\n        }\r\n    }\r\n\r\n    shouldUseDevilment(): boolean {\r\n        if (this.getBuff(dancerBuffs.technicalFinishBuff.name)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    shouldUseSaberDance(): boolean {\r\n        if (this.state.getEsprit() > 80 || this.isBursting()) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    isBursting(): boolean {\r\n        if (this.getBuff(dancerBuffs.technicalFinishBuff.name)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    getGCDProcToUse(): Skill {\r\n        if (this.state.getProcByName(dancerProcs.flourishingFountain.name)) {\r\n            return dancerSkills.fountainFall\r\n        }\r\n        if (this.state.getProcByName(dancerProcs.flourishingShower.name)) {\r\n            return dancerSkills.bloodshower\r\n        }\r\n        if (this.state.getProcByName(dancerProcs.flourishingCascade.name)) {\r\n            return dancerSkills.reverseCascade\r\n        }\r\n        if (this.state.getProcByName(dancerProcs.flourishingWindmill.name)) {\r\n            return dancerSkills.risingWindmill\r\n        }\r\n        return null\r\n    }\r\n\r\n    getShortestGCDProcTimer(): { duration: number, procs: number } {\r\n\r\n        let procArray: Array<number> = [\r\n            this.state.getProcByName(dancerProcs.flourishingFountain.name)?.duration,\r\n            this.state.getProcByName(dancerProcs.flourishingShower.name)?.duration,\r\n            this.state.getProcByName(dancerProcs.flourishingCascade.name)?.duration,\r\n            this.state.getProcByName(dancerProcs.flourishingWindmill.name)?.duration\r\n        ].filter((val) => val > 0)\r\n\r\n        const toReturn = {\r\n            duration: Math.min(...procArray),\r\n            procs: procArray.length\r\n        }\r\n        return toReturn\r\n    }\r\n}","export interface LevelMod {\r\n    mp: number\r\n    main: number\r\n    sub: number\r\n    div: number\r\n    threat: number\r\n}\r\n\r\nconst levelMod80: LevelMod = {\r\n    mp: 10000,\r\n    main: 340,\r\n    sub: 380,\r\n    div: 3300,\r\n    threat: 569\r\n}\r\n\r\nexport default levelMod80","import React, { Component } from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport { Player } from '../sim/player/player';\r\nimport { jobMods } from '../sim/jobs/jobmods';\r\nimport Skill from '../sim/jobs/skill';\r\nimport { dancerSkills } from '../sim/jobs/dnc/dancer';\r\nimport DNCSim from '../sim/jobs/dnc/sim';\r\nimport levelMod80 from '../sim/consts/levelmod';\r\nimport smooth from 'array-smooth'\r\n\r\nclass DamageChart extends Component<{}, { options: {}, series: any }> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const player: Player = {\r\n            stats: {\r\n                mainStat: 4867,\r\n                weaponDamage: 172,\r\n                crit: 528,\r\n                det: 1915,\r\n                dhit: 2873,\r\n                spellSpeed: 3593,\r\n                skillSpeed: 380,\r\n                tenacity: 380\r\n            },\r\n            jobMod: jobMods.dancer\r\n        }\r\n\r\n        const dancerBIS: Player = {\r\n            stats: {\r\n                mainStat: 4871,\r\n                weaponDamage: 128,\r\n                crit: 3969,\r\n                det: 2067,\r\n                dhit: 2762,\r\n                spellSpeed: 380,\r\n                skillSpeed: 380,\r\n                tenacity: 380\r\n            },\r\n            jobMod: jobMods.dancer\r\n        }\r\n\r\n        const opener: Array<Skill> = [\r\n            dancerSkills.prePullStandard,\r\n            dancerSkills.technicalStep,\r\n            dancerSkills.step,\r\n            dancerSkills.step,\r\n            dancerSkills.step,\r\n            dancerSkills.step,\r\n            dancerSkills.technicalFinish,\r\n            dancerSkills.flourish,\r\n            dancerSkills.risingWindmill,\r\n            dancerSkills.devilment\r\n        ]\r\n\r\n        let sim: DNCSim = new DNCSim(dancerBIS, levelMod80, 600, opener);\r\n\r\n        let data: Array<number[][]> = []\r\n\r\n        for (let i = 0; i < 1; i++) {\r\n            sim.run()\r\n            data.push(sim.createDataPointsPerSecondNew())\r\n        }\r\n\r\n        let dataAvg: number[][] = []\r\n\r\n        data[0].forEach((val: number[], index: number) => {\r\n            dataAvg.push([val[0], data.reduce((prev, current) => {\r\n                return prev + current[index][1]\r\n            }, 0) / data.length])\r\n\r\n        })\r\n\r\n        sim.log.forEach((damageLog) => { sim.printDamageLogLine(damageLog) });\r\n\r\n        console.log(dataAvg)\r\n\r\n        console.log(data)\r\n\r\n        this.state = {\r\n            options: {\r\n                chart: {\r\n                    id: 'apexchart-example'\r\n                },\r\n                xaxis: {\r\n                    type: 'numeric'\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth'\r\n                }\r\n            },\r\n            series: [\r\n            {\r\n                name: 'dps2',\r\n                data: smooth(smooth(dataAvg, 30, (val)=>val[1], (val,valsmoothed)=>[val[0], Math.floor(valsmoothed)]), 5, (val)=>val[1], (val,valsmoothed)=>[val[0], Math.floor(valsmoothed)])\r\n            }]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Chart options={this.state.options} series={this.state.series} type=\"line\" width={500} height={320} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DamageChart","import Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport DamageChart from '../damagechart';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nlet Welcome = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent>\r\n          <DamageChart />\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Welcome;","import { createElement, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PartialRouteObject } from 'react-router';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { IJourney, IRouteParam, IRouteParamOrDivider } from '../interfaces/journeys';\r\nimport * as views from './views/index';\r\nimport { setJourney } from '../store/actions/journey';\r\nimport { JOURNEY } from '../consts';\r\n\r\nconst makeElement = (o: IRouteParam) => {\r\n    return createElement(views[o.elementId]);\r\n};\r\n\r\nconst makeRoutesConfig = (routes: Array<IRouteParamOrDivider>): Array<PartialRouteObject> => {\r\n    /**\r\n     * First filter out 'divider' string, leaving only objects\r\n     */\r\n    console.log('entered makeRoutesConfig');\r\n    const aRouteParams = routes.filter(item => typeof item === 'object');\r\n    return (aRouteParams as Array<IRouteParam>)\r\n        .filter(item => views[item.elementId] !== undefined)\r\n        .map(o => {\r\n            let ret: PartialRouteObject = {\r\n                path: o.path,\r\n                element: makeElement(o)\r\n            };\r\n            if (typeof o === 'object' && o.children) {\r\n                ret.children = makeRoutesConfig(o.children);\r\n            }\r\n\r\n            return ret;\r\n        });\r\n};\r\n\r\nconst mapStateToProps = (state: { journey: IJourney }) => {\r\n    return {\r\n        routes: state.journey?.rootJourney,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n\r\n    return {\r\n      setJourn: function () {\r\n        dispatch(setJourney(JOURNEY))\r\n      }\r\n    };\r\n  };\r\n\r\nconst DynamicRouter = (props: { routes?: Array<IRouteParamOrDivider>, setJourn: any }) => {\r\n    console.log('entered DynamicRouter FC', window.location.href);\r\n    const { routes, setJourn } = props;\r\n\r\n    const [routesConfig, setRouter] = useState([]);\r\n    useEffect(() => {\r\n        setJourn()\r\n        const rc = makeRoutesConfig(props.routes);\r\n        setRouter(rc);\r\n    }, [routes]);\r\n\r\n    const element = useRoutes(routesConfig);\r\n\r\n    return element;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DynamicRouter);\r\n","import { Action } from \"../actions\"\r\nimport { IJourney } from '../../interfaces/journeys';\r\n\r\nconst setJourney = (journey: IJourney) => {\r\n  return {\r\n    type: Action.SET_JOURNEY,\r\n    payload: journey\r\n  }\r\n};\r\n\r\nexport {setJourney}\r\n","import { Action } from \"../actions\";\r\n\r\nconst counterReducer = (state = 0, action: any) => {\r\n    switch(action.type){\r\n        case Action.DECREMENT:\r\n            return state - 1;\r\n        case Action.INCREMENT:\r\n            return state + 1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer","import { Action } from \"../actions\";\r\nimport { JOURNEY } from \"../../consts\";\r\n\r\nconst INITIAL_STATE = {\r\n  rootJourney: [JOURNEY]\r\n}\r\n\r\nconst journeyReducer = (state = INITIAL_STATE, action: any) => {\r\n  console.log('in journeyReducer with action.type', action.type);\r\n  switch (action.type) {\r\n    case Action.SET_JOURNEY:\r\n      console.log('in journeyReducer with payload', action.payload);\r\n      return { ...state, ...action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default journeyReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport counterReducer from \"./reducers/counter\";\r\nimport journeyReducer from \"./reducers/journey\";\r\n\r\nconst routeReducer = combineReducers({\r\n    counter: counterReducer,\r\n    journey: journeyReducer\r\n});\r\n\r\nexport default routeReducer;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport './App.css';\r\nimport DynamicRouter from './components/dynamicrouter';\r\nimport routeReducer from './store/routeReducer';\r\n\r\nconst store = createStore(routeReducer, composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n),\r\n);\r\n\r\nconst App = (props: any) => {\r\n  console.log(\"public: \", process.env.PUBLIC_URL)\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <DynamicRouter />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}